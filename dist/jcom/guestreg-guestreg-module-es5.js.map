{"version":3,"sources":["webpack:///src/app/guestreg/guestreg.module.ts","webpack:///src/app/guestreg/guestreg.component.ts","webpack:///src/app/guestreg/guestreg.component.html","webpack:///src/app/guestreg/guestreg-routing.module.ts"],"names":["icons","Facebook","Twitter","Github","Gitlab","User","Key","UserCheck","Mail","Users","Phone","Globe","Crosshair","Flag","Lock","Award","Briefcase","Smartphone","UserPlus","Airplay","Link2","Columns","CreditCard","Calendar","MoreHorizontal","MapPin","GuestregModule","pick","forRoot","declarations","imports","GuestregComponent","fb","modalService","toastr","request","loader","rows","scrollBarHorizontal","window","innerWidth","newUserImg","data","filteredData","loadingIndicator","isRowSelected","reorderable","selected","columns","name","genders","id","value","countries","meetings","connects","connectssts","currentUserSubject","JSON","parse","localStorage","getItem","currentUser","asObservable","memberid","onresize","event","target","isdisable","viewdata","designation","register","group","m_id","guest_name","required","mobile_no","email_id","email","minLength","guest_city","business_category","type","cb","fetchguestById","subscribe","response","console","log","error","fetchbusiness","designations","content","open","ariaLabelledBy","size","patchValue","getId","img","row","rowIndex","fetchuserById","_id","editcustmergroup","custmernamevalue","username","custmerphonevalue","phone","custmeremailvalue","custmerpasswordvalue","password","custmerdesignationvalue","Designation","IdValue","editForm","setValue","selectedRowData","fire","title","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","deleteRecord","deleteRecordSuccess","deleteuser","array","filter","element","form","addguest","res","status","reset","dismissAll","addRecordSuccess","fetch","Guests","setTimeout","edata","updateuser","editRecordSuccess","val","toLowerCase","colsAmt","length","keys","Object","item","i","toString","indexOf","table","offset","min","max","Math","floor","random","success","count","addRow","selector","templateUrl","styleUrls","providers","table2","routes","path","component","GuestregRoutingModule","forChild","exports"],"mappings":"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","file":"guestreg-guestreg-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GuestregRoutingModule } from './guestreg-routing.module';\nimport { GuestregComponent } from './guestreg.component';\n\nimport { FeatherModule } from 'angular-feather';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { ToastrModule } from 'ngx-toastr';\nimport { ArchwizardModule } from 'angular-archwizard';\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n\nimport {\n  Facebook,\n  Twitter,\n  Github,  Gitlab,  User,\n  Key, UserCheck,  Mail,  Users,  Phone,  Globe,  Crosshair,  Flag,  Lock,  Award,  Briefcase,\n  Smartphone,  UserPlus,\n  Airplay,\n  Link2,\n  Columns,\n  CreditCard,Calendar,\n  MoreHorizontal,\n  MapPin\n  \n} from 'angular-feather/icons';\nconst icons = {\n  Facebook,\n  Twitter,\n  Github,  Gitlab, User,  Key, UserCheck, Mail,  Users,  Phone,  Globe,\n  Crosshair,  Flag,  Lock,  Award,  Briefcase,  Smartphone,  UserPlus,\n  Airplay,\tLink2,\n  Columns,\n  CreditCard,\n  Calendar,\n  MoreHorizontal,\n  MapPin\n \n  \n};\n\n@NgModule({\n  declarations: [GuestregComponent],\n  imports: [\n    CommonModule,\n    GuestregRoutingModule,\n    FeatherModule.pick(icons),\n   \n    ReactiveFormsModule,\n    \n    NgxDatatableModule,\n    HttpClientModule,\n    ToastrModule.forRoot(),ArchwizardModule,\n    NgxSkeletonLoaderModule,\n    NgSelectModule\n  ]\n})\nexport class GuestregModule { }\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport {\n  FormGroup,\n  FormBuilder,\n  FormControl,\n  Validators,\n} from '@angular/forms'; \nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport Swal from 'sweetalert2';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { RequestService } from \"../services/request.service\";\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { User } from '../core/models/user';\n\n\n\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-guestreg',\n  templateUrl: './guestreg.component.html',\n  styleUrls: ['./guestreg.component.sass'],\n  providers: [ToastrService],\n})\nexport class GuestregComponent implements OnInit {\n\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  \n  selectedCar: number;\n  loader =true;\n  rows = [];\n  scrollBarHorizontal = window.innerWidth < 1200;\n  selectedRowData: selectRowInterface;\n  newUserImg = 'assets/images/users/user-2.png';\n  data = [];\n  public Guests: any;\n   Categorys: any;\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  loadingIndicator = true;\n  isRowSelected = false;\n  selectedOption: string;\n  reorderable = true;\n  editcustmergroup: any;\n  public selected: any[] = [];\n  custmernamevalue:any;\n  custmerphonevalue:any;\n  custmeremailvalue:any;\n  custmerpasswordvalue:any;\n\n  isdisable: boolean;\n\n  columns = [\n    { name: 'username' },\n    { name: 'phone' },\n    { name: 'email' },\n    { name: 'password' }\n  ];\n  genders = [\n    { id: '1', value: 'male' },\n    { id: '2', value: 'female' },\n  ];\n  countries = [\n    { id: '1', name: 'India' },\n   \n  ];\n  meetings = [ \n    { id: '1', value: 'Live' },\n    { id: '2', value: 'Virtual' },\n    { id: '3', value: 'Virtual International' },\n    { id: '4', value: 'Association' },\n  ];\n  connects = [\n   \n    \n    { id: '1', value: 'JCI' },\n    { id: '2', value: 'Non-JCI' },\n   \n  ];\n  connectssts = [\n   \n    { id: '1', value: 'Self Connect' },\n    { id: '2', value: 'Within JCI-JCOM' },\n\n  ];\n\n  // Categoryss = [ \n  //   { id:'33', value:'Accountant' },\n  //   { id:'24', value:'Agriculture Machinery' },\n  //   { id:'11', value: 'developer' },\n  //   { id:'35', value:'Brick Making Machine' },\n  // ];\n  \n\n \n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n  error: string;\n  IdValue: any;\n  designations: any;\n  custmerdesignationvalue: any;\n  currentUserSubject: BehaviorSubject<User>;\n  currentUser: Observable<User>;\n  memberid: any;\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n    private toastr: ToastrService,private request: RequestService,\n  ) {\n\n    this.currentUserSubject = new BehaviorSubject<User>(\n      JSON.parse(localStorage.getItem('currentUser'))\n    );\n    this.currentUser = this.currentUserSubject.asObservable();\n    this.memberid = this.currentUserSubject.value[0]\n\n    window.onresize = () => {\n      this.scrollBarHorizontal = window.innerWidth < 1200;\n    };\n \n  }\n\n  \n  selectInput1(event) {\n    let selected = event.target.value;\n    if (selected == \"1\") {\n      this.isdisable = true ;\n    } else {\n      this.isdisable =  false;\n    }\n  }\n\n  ngOnInit() {\n    this.viewdata();    \n    this.designation();\n    this.register = this.fb.group({\n      m_id:this.memberid.m_id,\n      guest_name: ['', [Validators.required]],\n      mobile_no: ['', [Validators.required]],\n      email_id: ['', [Validators.required, Validators.email, Validators.minLength(5)],],\n      guest_city: ['', [Validators.required]],\n      business_category: ['', [Validators.required]],\n      type: ['', [Validators.required]],\n    });\n  }\n  // fetch data\n  fetch(cb) {\n    this.request.fetchguestById(this.memberid.m_id).subscribe((response) => {\n      console.log(this.memberid.m_id)\n     console.log(response);\n     \n              cb(response);\n              this.loader=false;\n    }, (error) => {\n      console.log(error);\n    });\n  }\n  // business fetch\n  designation() {\n    this.request.fetchbusiness().subscribe((response) => {\n  this.designations=response;\n  // console.log(this.designations);\n    }, (error) => {\n      console.log(error);\n    });\n\n  }\n  // fetch2(cb) {\n  //   this.request.fetchbusinessById().subscribe((response) => {\n     \n  //    console.log(response);\n     \n  //             cb(response);\n  //             this.loader=false;\n  //   }, (error) => {\n  //     console.log(error);\n  //   });\n\n  // }\n\n  openhistory(content) {\n    this.modalService.open(content, {\n      ariaLabelledBy: 'modal-basic-title',\n      size: 'lg',\n    });\n  }\n\n  \n  pendinghistory(content) {\n    this.modalService.open(content, {\n      ariaLabelledBy: 'modal-basic-title',\n      size: 'lg',\n    });\n  }\n  // add new record\n  addRow(content) {\n    this.modalService.open(content, {\n      ariaLabelledBy: 'modal-basic-title',\n      size: 'lg',\n    });\n    this.register.patchValue({\n      id: this.getId(10, 100),\n      img: this.newUserImg,\n    });\n\n  }\n  // edit record\n  editRow(row, rowIndex, content) {\n    this.modalService.open(content, {\n      ariaLabelledBy: 'modal-basic-title',\n      size: 'lg',\n    });\n\n\n\n    this.request.fetchuserById(row._id).subscribe((response) => {\n      this.editcustmergroup=response[0];\n      console.log(response);\n        this.custmernamevalue=this.editcustmergroup.username;\n        this.custmerphonevalue=this.editcustmergroup.phone;\n        this.custmeremailvalue=this.editcustmergroup.email;\n        this.custmerpasswordvalue=this.editcustmergroup.password;\n        this.custmerdesignationvalue=this.editcustmergroup.Designation;\n        this.IdValue=this.editcustmergroup._id;\n\n      //   this.editForm = this.formBuilder.group({\n      //     CountryName2:[this.CountryValue, Validators.required],\n      //     Countrycode2:[this.CountrycodeValue, Validators.required]\n      // });\n      // console.log(this.editForm.value);\n\n\n\n      this.editForm.setValue({\n        username: this.custmernamevalue,\n        phone: this.custmerphonevalue,\n        email: this.custmeremailvalue,\n        password: this.custmerpasswordvalue,\n        Designation: this.custmerdesignationvalue,\n      });\n      this.selectedRowData = row;\n\n    });\n\n  }\n  // delete single row\n  deleteSingleRow(row) {\n    Swal.fire({\n      title: 'Are you sure?',\n      showCancelButton: true,\n      confirmButtonColor: '#8963ff',\n      cancelButtonColor: '#fb7823',\n      confirmButtonText: 'Yes',\n    }).then((result) => {\n      if (result.value) {\n        this.deleteRecord(row);\n        this.deleteRecordSuccess(1);\n      }\n    });\n  }\n\n  deleteRecord(row) {\n    console.log(\"row\",row._id);\n    this.request.deleteuser(row._id).subscribe((response) => {\n      console.log(response);\n      this.viewdata();\n     }, (error) => {\n       console.log(error);\n     });\n  }\n\n  arrayRemove(array, id) {\n    return array.filter(function (element) {\n      return element.id !== id;\n    });\n  }\n  // save add new record\n  onAddRowSave(form: FormGroup) { \n    console.log(form.value);\n    this.request.addguest(form.value).subscribe((res: any) => {\n      if (res[0].status == 'success') {\n        console.log(res);\n        console.log(\"saved\",res[0].status);\n        form.reset();\n    this.modalService.dismissAll();\n    this.viewdata();\n    this.addRecordSuccess();\n\n      }\n      else if (res[0].status == 'error') {\n        console.log(\"res\",res);\n        form.reset();\n    this.modalService.dismissAll();\n      }\n    }, (error) => {\n      console.log(\"error\",error);\n      form.reset();\n      this.modalService.dismissAll();\n    });\n\n  }\n\nviewdata(){\n  this.fetch((data) => {\n    this.data = data;\n    // this.filteredData = data;\n    this.Guests=data;\n    console.log(this.Guests);\n    // this.filteredData=data;\n    setTimeout(() => {\n      this.loadingIndicator = false;\n    }, 500);\n  });\n}\n\n// business category\n\n// viewdata2(){\n//   this.fetch2((data) => {\n//     this.data = data;\n//     // this.filteredData = data;\n//     this.Categorys=data;\n//     console.log(this.Categorys);\n//     // this.filteredData=data;\n//     setTimeout(() => {\n//       this.loadingIndicator = false;\n//     }, 500);\n//   });\n// }\n\n  // save record on edit\n  onEditSave(form: FormGroup) {\n\n    const edata = {\n      username: form.value.username,\n      phone: form.value.phone,\n      email: form.value.email,\n      password: form.value.password,\n      Designation:form.value.Designation\n  }\n  this.request.updateuser(this.IdValue,edata).subscribe((res : any) => {\n    if (res.status == 'success') {\n      this.modalService.dismissAll();\n      this.viewdata();\n      this.editRecordSuccess();\n      return true;\n    }\n    else if (res.status == 'error') {\n      this.modalService.dismissAll();\n    }\n\n  }, (error) => {\n    console.log(error);\n    this.modalService.dismissAll();\n  });\n\n  }\n  // filter table data\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys( this.filteredData[0]);\n    // console.log(\"keys\",\"\"+keys);\n    // assign filtered matches to the active datatable\n    this.Guests = this.filteredData.filter(function (item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]].toString().toLowerCase().indexOf(val) !== -1 ||\n          !val\n        ) {\n           \n      \n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  // get random id\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  addRecordSuccess() {\n    this.toastr.success('Add Record Successfully', '');\n  }\n  editRecordSuccess() {\n    this.toastr.success('Edit Record Successfully', '');\n  }\n  deleteRecordSuccess(count) {\n    this.toastr.error(count + ' Records Deleted Successfully', '');\n  }\n}\nexport interface selectRowInterface {\n  img: String;\n  firstName: String;\n  lastName: String;\n}\n","<section class=\"main-content\">\n  <div class=\"section-body\" style=\"margin-top: 20px;\">\n    <div class=\"row clearfix\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"p-10\" style=\"margin-right: 20px; margin-left: 20px;\">\n            <div class=\"row\" >\n              <div class=\"col-lg-12\">\n                <div class=\"row m-0\">\n                  <div class=\"col-lg-3 p-0\">\n                    <div class=\"ngxTableHeader\">\n                      <div class=\"table-title\">\n                        <h5><strong>Registration History</strong></h5>\n                      </div>\n                    </div>\n                  </div>\n\n                  \n\n                  <div class=\"col-lg-3 p-0\">\n                    <div class=\"ngxTableHeader\">\n                      <div class=\"header-buttons-left\">\n                        <div class=\"icon-button-demo buttons\">\n                      \n                          <button class=\"btn btn-icon icon-left btn-success\" (click)='addRow(regRecord)' >\n                            <i class=\"fas fa-plus\"></i>Register</button>\n\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <!-- row end -->\n            <br>\n\n\n            <ngx-datatable #table class=\"material\" [rows]=\"Guests\" [loadingIndicator]=\"loadingIndicator\"\n            columnMode=\"force\" [headerHeight]=\"50\" [footerHeight]=\"50\" rowHeight=\"auto\" [limit]=\"8\"\n            [scrollbarH]=\"scrollBarHorizontal\" [reorderable]=\"reorderable\" *ngIf=\"!loader\">\n\n              <ngx-datatable-column name=\"Date\">\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                     {{row.date}}\n                   </ng-template>\n              </ngx-datatable-column>\n\n              <ngx-datatable-column [width]=\"200\" name=\"Name\">\n                <ng-template let-row=\"row\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>\n                  <div class=\"name-col-style\">\n                    <div>{{row.guest_name}}</div>\n                  </div>\n                </ng-template>\n              </ngx-datatable-column>\n\n              <ngx-datatable-column name=\"Email\" [width]=\"250\">\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                {{row.email_id}}\n                </ng-template>\n              </ngx-datatable-column>\n\n              <ngx-datatable-column name=\"City\">\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\n        {{row.city}}\n      </ng-template>\n              </ngx-datatable-column>\n\n              <ngx-datatable-column name=\"Category\">\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\n        {{row.business_category}}\n      </ng-template>\n              </ngx-datatable-column>\n             \n              <ngx-datatable-column name=\"Status\">\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                  <div *ngIf=\"row.status=='Present'\" class=\"badge-outline col-green\">{{row.status}}\n                  </div>\n                  <div *ngIf=\"row.status=='Absent'\" class=\"badge-outline col-red\">{{row.status}}\n                  </div>\n                  \n                </ng-template>\n              </ngx-datatable-column>\n\n            </ngx-datatable>\n\n\n                <!-- <ngx-skeleton-loader count=\"3\" appearance=\"line\" *ngIf=\"loader\"></ngx-skeleton-loader> -->\n                <div id=\"tit\" style=\"width: 100%;\">\n                  <ngx-skeleton-loader count=\"1\"\n                    [theme]=\"{  'border-radius': '4px',  height: '60px',  width:'100%', 'opacity':.6, 'background-color': '##b9b8b8',   border: '1px solid white'  }\"\n                    *ngIf=\"loader\"></ngx-skeleton-loader>\n                </div>\n                <div class=\"skle\" style=\"width: 100%;\">\n                  <ngx-skeleton-loader count=\"10\"\n                    [theme]=\"{  'border-radius': '4px',  height: '30px', width:'100%', 'opacity':.6, 'background-color': '##b9b8b8',   border: '1px solid white'  }\"\n                    appearance=\"line\" *ngIf=\"loader\"></ngx-skeleton-loader>\n  \n                </div>\n                \n\n\n            <!--  add Modal Window -->\n            <ng-template #regRecord let-modal>\n              <div class=\"modal-header editRowModal\">\n                <h4 class=\"modal-title\" id=\"modal-basic-title\">\n                  <div class=\"table-modal-header\">\n                    <img src=\"assets/images/JCOM logo 4.jpg\" alt=\"avatar\">\n                    <div class=\"modal-about\">\n                      <div class=\"font-weight-bold p-t-10 font-17\">\n                        Guest Registeration</div>\n                    </div>\n                  </div>\n                </h4>\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n                  <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                </button>\n              </div>\n\n              <div class=\"modal-body\">\n\n\n                <form class=\"register-form\" [formGroup]=\"register\" (ngSubmit)=\"onAddRowSave(register)\"\n                  style=\"margin-top: 50px; border-color: rgb(20, 20, 20); border: black; \">\n                  <div class=\"row\" style=\"margin-left: 20px;margin-right: 20px;  border: black; \">\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group position-relative\">\n                        <label>Name <span class=\"text-danger\">*</span></label>\n                        <i-feather name=\"user\" class=\"login-icons\" style=\"color: rgb(63, 89, 241);\"></i-feather>\n                        <input type=\"text\" class=\"form-control pl-5\" formControlName=\"guest_name\" placeholder=\"Name\" required>\n                        <small class=\"form-text text-danger\"\n                        *ngIf=\"!register.get('guest_name').valid && register.get('guest_name').touched\">\n                        *Please fill</small>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group position-relative\">\n                        <label>Mobile No <span class=\"text-danger\">*</span></label>\n                        <i-feather name=\"phone\" class=\"login-icons\" style=\"color: rgb(63, 89, 241);\"></i-feather>\n                        <input type=\"text\" class=\"form-control pl-5\" formControlName=\"mobile_no\" placeholder=\"Mobile No \" required>\n                        <small class=\"form-text text-danger\"\n                        *ngIf=\"!register.get('mobile_no').valid && register.get('mobile_no').touched\">\n                        *Please fill</small>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group position-relative\">\n                        <label> E-mail <span class=\"text-danger\">*</span></label>\n                        <i-feather name=\"mail\" class=\"login-icons\" style=\"color: rgb(63, 89, 241);\"></i-feather>\n                        <input type=\"email\" class=\"form-control pl-5\" formControlName=\"email_id\" placeholder=\"Email\" required>\n                        <small class=\"form-text text-danger\"\n                        *ngIf=\"!register.get('email_id').valid && register.get('email_id').touched\">\n                        *Please fill</small>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group position-relative\">\n                        <label>City <span class=\"text-danger\">*</span></label>\n                        <i-feather name=\"map-pin\" class=\"login-icons\" style=\"color: rgb(63, 89, 241);\"></i-feather>\n                        <input type=\"text\" class=\"form-control pl-5\" formControlName=\"guest_city\" placeholder=\"City\" required>\n                        <small class=\"form-text text-danger\"\n                        *ngIf=\"!register.get('guest_city').valid && register.get('guest_city').touched\">\n                        *Please fill</small>\n                      </div>\n                    </div>\n\n\n                    <!-- <div class=\"col-md-6\">\n                      <div class=\"form-group position-relative\">\n                        <label>Business Category <span class=\"text-danger\">*</span></label>\n                        <i-feather name=\"Briefcase\" class=\"login-icons\" style=\"color: rgb(63, 89, 241);\"></i-feather>\n                        <select class=\"form-control pl-5\" formControlName=\"business_category\" required>\n                          <option value=\"\" selected disabled>select</option>\n                          <option *ngFor=\"let category of designations\" [value]=\"category.id\">\n                            {{category.category}}\n                          </option>\n                        </select>\n\n                      </div>\n                    </div> -->\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group position-relative\">\n                        <label>Business Category <span class=\"text-danger\">*</span></label>\n                        <i-feather name=\"Briefcase\" class=\"login-icons\" style=\"color: rgb(63, 89, 241);\"></i-feather>                  \n                        \n                       <ng-select  [items]=\"designations\" bindLabel=\"category\" bindValue=\"id\" formControlName=\"business_category\" required>\n                      </ng-select>\n                      <small class=\"form-text text-danger\"\n                      *ngIf=\"!register.get('business_category').valid && register.get('business_category').touched\">\n                      *Please fill</small>\n                        \n                      </div>\n                    </div>\n\n\n                    <div class=\"col-md-12\">\n                      <div id=\"df\" style=\"height: 50px;\">\n                        <label>\n                          <h6>Type :<span class=\"text-danger\">*</span></h6>\n                        </label> &nbsp;&nbsp;\n                        <div class=\"form-check form-check-inline\">\n                          <input class=\"form-check-input\" type=\"radio\" formControlName=\"type\" name=\"inlineRadioOptions\" id=\"inlineRadio1\"\n                            value=\"option1\">\n                          <label class=\"form-check-label\" for=\"inlineRadio1\">JCI</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                          <input class=\"form-check-input\" type=\"radio\" formControlName=\"type\" name=\"inlineRadioOptions\" id=\"inlineRadio2\"\n                            value=\"option2\">\n                          <label class=\"form-check-label\" for=\"inlineRadio2\">Non-JCI</label>\n                        </div>\n\n                      </div>\n\n                    </div>\n\n                    <!-- <div class=\"col-md-8\">\n                      <div class=\"form-group position-relative\">\n                        <label> comments </label>\n                        <textarea name=\"\" class=\"form-control pl-2 \" formControlName=\"\" cols=\"30\" rows=\"3 \"></textarea>\n\n                      </div>\n                    </div> -->\n\n                    <div class=\"col-md-12\" style=\"text-align: center;\"><br>\n                      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!register.valid\">CONFIRM</button>\n                      <br><br><br>\n                    </div>\n                    <!-- <button (click)=\"toggleShow()\" type=\"checkbox\" >show/hide</button> -->\n\n                    <!-- row end -->\n                  </div>\n                </form>\n              </div>\n            </ng-template>\n\n\n\n            <!-- PENDING History -->\n            <ng-template #pendingRecord let-modal>\n              <div class=\"modal-header editRowModal\">\n                <h4 class=\"modal-title\" id=\"modal-basic-title\">\n                  <div class=\"table-modal-header\">\n                    <img src=\"assets/images/JCOM logo 4.jpg\" alt=\"avatar\">\n                    <div class=\"modal-about\">\n                      <div class=\"font-weight-bold p-t-10 font-17\">\n                        Connect Pending History</div>\n                    </div>\n                  </div>\n                </h4>\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n                  <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                </button>\n              </div>\n\n              <div class=\"modal-body\">\n\n                <ngx-datatable #table class=\"material\" [rows]=\"Customers\" [loadingIndicator]=\"loadingIndicator\"\n                  columnMode=\"force\" [headerHeight]=\"60\" rowHeight=\"auto\" [limit]=\"10\"\n                  [scrollbarH]=\"scrollBarHorizontal\" [reorderable]=\"reorderable\" [selected]=\"selected\"\n                  [selectionType]=\"'checkbox'\" (select)='onSelect($event)'>\n\n                  <ngx-datatable-column name=\"Date\">\n                    <!-- <ng-template let-row=\"row\" ngx-datatable-cell-template>\n              {{row.phone}}\n            </ng-template> -->\n                  </ngx-datatable-column>\n\n\n                  <ngx-datatable-column [width]=\"200\" name=\"Name\">\n                    <ng-template let-row=\"row\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>\n                      <div class=\"name-col-style\">\n                        <div>{{row.username}}</div>\n                      </div>\n                    </ng-template>\n                  </ngx-datatable-column>\n\n                  <ngx-datatable-column name=\"Type\">\n                    <!-- <ng-template let-row=\"row\" ngx-datatable-cell-template>\n            {{row.phone}}\n          </ng-template> -->\n                  </ngx-datatable-column>\n                </ngx-datatable>\n\n              </div>\n\n            </ng-template>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GuestregComponent } from './guestreg.component';\n\nconst routes: Routes = [{ path: '', component: GuestregComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GuestregRoutingModule { }\n"]}