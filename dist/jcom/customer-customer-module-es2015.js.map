{"version":3,"sources":["./src/app/customer/customer.component.ts","./src/app/customer/customer.component.html","./src/app/customer/customer.module.ts","./src/app/customer/customer-routing.module.ts"],"names":[],"mappings":"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","file":"customer-customer-module-es2015.js","sourcesContent":["import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport {\n  FormGroup,\n  FormBuilder,\n  FormControl,\n  Validators,\n} from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport Swal from 'sweetalert2';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { RequestService } from \"../services/request.service\";\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.sass'],\n  providers: [ToastrService],\n})\nexport class CustomerComponent implements OnInit {\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  rows = [];\n  scrollBarHorizontal = window.innerWidth < 1200;\n  selectedRowData: selectRowInterface;\n  newUserImg = 'assets/images/users/user-2.png';\n  data = [];\n  public Customers: any;\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  loadingIndicator = true;\n  isRowSelected = false;\n  selectedOption: string;\n  reorderable = true;\n  editcustmergroup: any;\n  public selected: any[] = [];\n  custmernamevalue:any;\n  custmerphonevalue:any;\n  custmeremailvalue:any;\n  custmerpasswordvalue:any;\n  columns = [\n    { name: 'username' },\n    { name: 'phone' },\n    { name: 'email' },\n    { name: 'password' }\n  ];\n  genders = [\n    { id: '1', value: 'male' },\n    { id: '2', value: 'female' },\n  ];\n  statusType = [\n    { id: '1', value: 'Active' },\n    { id: '2', value: 'Completed' },\n    { id: '3', value: 'Pending' },\n  ];\n  designationType = [\n    { id: '1', value: 'Manager' },\n    { id: '2', value: 'Team Leader' },\n    { id: '3', value: 'Clerk' },\n  ];\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n  error: string;\n  IdValue: any;\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n    private toastr: ToastrService,private request: RequestService\n  ) {\n    this.editForm = this.fb.group({\n      username: ['', [Validators.required, Validators.pattern('[a-zA-Z]+')]],\n      phone: ['', [Validators.required]],\n      email: [\n        '',\n        [Validators.required, Validators.email, Validators.minLength(5)],\n      ],\n      password: ['', [Validators.required]]\n    });\n    window.onresize = () => {\n      this.scrollBarHorizontal = window.innerWidth < 1200;\n    };\n  }\n  // select record using check box\n  onSelect({ selected }) {\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n\n    if (this.selected.length === 0) {\n      this.isRowSelected = false;\n    } else {\n      this.isRowSelected = true;\n    }\n  }\n  deleteSelected() {\n    Swal.fire({\n      title: 'Are you sure?',\n      showCancelButton: true,\n      confirmButtonColor: '#8963ff',\n      cancelButtonColor: '#fb7823',\n      confirmButtonText: 'Yes',\n    }).then((result) => {\n      if (result.value) {\n        this.selected.forEach((row) => {\n          this.deleteRecord(row);\n        });\n        this.deleteRecordSuccess(this.selected.length);\n        this.selected = [];\n        this.isRowSelected = false;\n      }\n    });\n  }\n  ngOnInit() {\n    this.viewdata();\n    this.register = this.fb.group({\n      username: ['', [Validators.required, Validators.pattern('[a-zA-Z]+')]],\n      phone: ['', [Validators.required]],\n      email: [\n        '',\n        [Validators.required, Validators.email, Validators.minLength(5)],\n      ],\n      password: ['', [Validators.required]]\n    });\n  }\n  // fetch data\n  fetch(cb) {\n\n    this.request.getcustomer().subscribe((response) => {\n     console.log(response);\n     \n              cb(response);\n    }, (error) => {\n      console.log(error);\n    });\n\n  }\n  // add new record\n  addRow(content) {\n    this.modalService.open(content, {\n      ariaLabelledBy: 'modal-basic-title',\n      size: 'lg',\n    });\n    this.register.patchValue({\n      id: this.getId(10, 100),\n      img: this.newUserImg,\n    });\n\n  }\n  // edit record\n  editRow(row, rowIndex, content) {\n    this.modalService.open(content, {\n      ariaLabelledBy: 'modal-basic-title',\n      size: 'lg',\n    });\n\n\n\n    this.request.fetchcustomerById(row._id).subscribe((response) => {\n      this.editcustmergroup=response[0];\n      console.log(response);\n        this.custmernamevalue=this.editcustmergroup.username;\n        this.custmerphonevalue=this.editcustmergroup.phone;\n        this.custmeremailvalue=this.editcustmergroup.email;\n        this.custmerpasswordvalue=this.editcustmergroup.password;\n        this.IdValue=this.editcustmergroup._id;\n\n      //   this.editForm = this.formBuilder.group({\n      //     CountryName2:[this.CountryValue, Validators.required],\n      //     Countrycode2:[this.CountrycodeValue, Validators.required]\n      // });\n      // console.log(this.editForm.value);\n\n\n\n      this.editForm.setValue({\n        username: this.custmernamevalue,\n        phone: this.custmerphonevalue,\n        email: this.custmeremailvalue,\n        password: this.custmerpasswordvalue,\n      });\n      this.selectedRowData = row;\n\n    });\n\n\n\n\n  }\n  // delete single row\n  deleteSingleRow(row) {\n    Swal.fire({\n      title: 'Are you sure?',\n      showCancelButton: true,\n      confirmButtonColor: '#8963ff',\n      cancelButtonColor: '#fb7823',\n      confirmButtonText: 'Yes',\n    }).then((result) => {\n      if (result.value) {\n        this.deleteRecord(row);\n        this.deleteRecordSuccess(1);\n      }\n    });\n  }\n\n  deleteRecord(row) {\n    console.log(\"row\",row._id);\n    this.request.deletecustomer(row._id).subscribe((response) => {\n      console.log(response);\n      this.viewdata();\n     }, (error) => {\n       console.log(error);\n     });\n  }\n\n  arrayRemove(array, id) {\n    return array.filter(function (element) {\n      return element.id !== id;\n    });\n  }\n  // save add new record\n  onAddRowSave(form: FormGroup) {\n  \n    console.log(form.value);\n    this.request.addcustomer(form.value).subscribe((res: any) => {\n      if (res.status == 'success') {\n        console.log(res);\n        form.reset();\n    this.modalService.dismissAll();\n    this.viewdata();\n    this.addRecordSuccess();\n\n      }\n      else if (res.status == 'error') {\n        console.log(\"res\",res);\n        form.reset();\n    this.modalService.dismissAll();\n      }\n    }, (error) => {\n      console.log(\"error\",error);\n      form.reset();\n      this.modalService.dismissAll();\n    });\n\n\n  }\n\n\n\nviewdata(){\n  this.fetch((data) => {\n    this.data = data;\n    // this.filteredData = data;\n    this.Customers=data.response;\n    this.filteredData=data.response;\n    setTimeout(() => {\n      this.loadingIndicator = false;\n    }, 500);\n  });\n}\n\n  // save record on edit\n  onEditSave(form: FormGroup) {\n\n    const edata = {\n      username: form.value.username,\n      phone: form.value.phone,\n      email: form.value.email,\n      password: form.value.password\n  }\n  this.request.updatecustomer(this.IdValue,edata).subscribe((res : any) => {\n    if (res.status == 'success') {\n      this.modalService.dismissAll();\n      this.viewdata();\n      this.editRecordSuccess();\n      return true;\n    }\n    else if (res.status == 'error') {\n      this.modalService.dismissAll();\n    }\n\n  }, (error) => {\n    console.log(error);\n    this.modalService.dismissAll();\n  });\n\n  }\n  // filter table data\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys( this.filteredData[0]);\n    // console.log(\"keys\",\"\"+keys);\n    // assign filtered matches to the active datatable\n    this.Customers = this.filteredData.filter(function (item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]].toString().toLowerCase().indexOf(val) !== -1 ||\n          !val\n        ) {\n           \n      \n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  // get random id\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  addRecordSuccess() {\n    this.toastr.success('Add Record Successfully', '');\n  }\n  editRecordSuccess() {\n    this.toastr.success('Edit Record Successfully', '');\n  }\n  deleteRecordSuccess(count) {\n    this.toastr.error(count + ' Records Deleted Successfully', '');\n  }\n}\nexport interface selectRowInterface {\n  img: String;\n  firstName: String;\n  lastName: String;\n}\n","<section class=\"main-content\">\n\n    <div class=\"section-body\" style=\"margin-top: 20px;\">\n      <div class=\"row clearfix\">\n        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n          <div class=\"card\">\n            <div class=\"p-10\">\n              <div class=\"row\">\n                <div class=\"col-lg-6\">\n                  <div class=\"row m-0\">\n                    <div class=\"col-lg-3 p-0\">\n                      <div class=\"ngxTableHeader\">\n                        <div class=\"table-title\">\n                          <h2><strong>Customer</strong></h2>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col-lg-5 p-0\">\n                      <div class=\"ngxTableHeader\">\n                        <div class=\"table-search-area\">\n                          <div>\n                            <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                            <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                              (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col-lg-4 p-0\">\n                      <div class=\"ngxTableHeader\">\n                        <div class=\"header-buttons-left\">\n                          <div class=\"icon-button-demo buttons\">\n                            <button class=\"btn btn-icon icon-left btn-primary rounded-button\" (click)='addRow(addRecord)'>\n                              <i class=\"material-icons\">add</i>\n                            </button>\n                            <button [hidden]=!isRowSelected class=\"btn btn-icon icon-left btn-danger rounded-button\"\n                              (click)='deleteSelected()'>\n                              <i class=\"material-icons\">delete</i>\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <ngx-datatable #table class=\"material\" [rows]=\"Customers\" [loadingIndicator]=\"loadingIndicator\"\n                columnMode=\"force\" [headerHeight]=\"60\" [footerHeight]=\"80\" rowHeight=\"auto\" [limit]=\"10\"\n                [scrollbarH]=\"scrollBarHorizontal\" [reorderable]=\"reorderable\" [selected]=\"selected\"\n                [selectionType]=\"'checkbox'\" (select)='onSelect($event)'>\n  \n                <ngx-datatable-column [width]=\"70\" [sortable]=\"false\" [draggable]=\"false\" [resizeable]=\"false\"\n                  [canAutoResize]=\"false\" [headerCheckboxable]=\"true\" [checkboxable]=\"true\">\n                </ngx-datatable-column>\n  \n                <ngx-datatable-column [width]=\"200\" name=\"Name\">\n                  <ng-template let-row=\"row\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>\n                    <div class=\"name-col-style\">\n                      <div>{{row.username}}</div>   \n                    </div>\n                  </ng-template>\n                </ngx-datatable-column>\n          \n                <ngx-datatable-column name=\"Phone\">\n                  <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                    {{row.phone}}\n                  </ng-template>\n                </ngx-datatable-column>\n                <ngx-datatable-column name=\"Email\">                  \n                  <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                    {{row.email}}\n                  </ng-template>\n                </ngx-datatable-column>\n             \n               \n                <ngx-datatable-column [width]=\"100\" name=\"Actions\" sortable=\"false\">\n                  <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\" ngx-datatable-cell-template>\n                    <span>\n                      <button class=\"btn btn-tbl-edit h-auto\" (click)='editRow(row, rowIndex, editRecord)'>\n                        <i class=\"fas fa-pen\"></i>\n                      </button>\n                      <button class=\"btn btn-tbl-delete h-auto\" (click)='deleteSingleRow(row)'>\n                        <i class=\"far fa-trash-alt\"></i>\n                      </button>\n                    </span>\n                  </ng-template>\n                </ngx-datatable-column>\n              </ngx-datatable>\n              <!-- Add Record Modal Window -->\n              <ng-template #addRecord let-modal>\n                <div class=\"modal-header editRowModal\">\n                  <h4 class=\"modal-title\" id=\"modal-basic-title\">\n                    <div class=\"table-modal-header\">\n                      <img [src]='newUserImg' alt=\"avatar\">\n                      <div class=\"modal-about\">\n                        <div class=\"font-weight-bold p-t-10 font-17\">\n                          New Customer</div>\n                      </div>\n                    </div>\n                  </h4>\n                  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n                    <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                  </button>\n                </div>\n                <div class=\"modal-body\">\n                  <form class=\"register-form\" [formGroup]=\"register\" (ngSubmit)=\"onAddRowSave(register)\">\n                    <!-- <div class=\"input-field col s12 d-none\">\n                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                    </div>\n                    <div class=\"input-field col s12 d-none\">\n                      <input formControlName=\"img\" class=\"form-control\" type=\"hidden\">\n                    </div> -->\n                    <div class=\"row\">\n                      <div class=\"col-lg-6\">\n                        <label>name <span class=\"text-danger\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"name\" formControlName=\"username\"\n                          required>\n                        <small class=\"form-text text-danger\"\n                          *ngIf=\"!register.get('username').valid && register.get('username').touched\">username is\n                          required</small>\n                      </div>\n      \n\n                      <div class=\"col-lg-6\">\n                        <label>Phone<span class=\"text-danger\">*</span></label>\n                        <input type=\"number\" class=\"form-control\" placeholder=\"Phone\" formControlName=\"phone\" required>\n                        <small class=\"form-text text-danger\"\n                          *ngIf=\"!register.get('phone').valid && register.get('phone').touched\"> Phone is\n                          required</small>\n                      </div>\n                \n                      <div class=\"col-lg-6\">\n                        <label>Email<span class=\"text-danger\">*</span></label>\n                        <input type=\"email\" class=\"form-control\" placeholder=\"Email\" formControlName=\"email\" required>\n                        <small class=\"form-text text-danger\"\n                          *ngIf=\"!register.get('email').valid && register.get('email').touched\"> Please enter a valid\n                          email address</small>\n                      </div>\n                \n                      <div class=\"col-lg-6\">\n                        <label>Password<span class=\"text-danger\">*</span></label>\n                        <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"password\" required>\n                        <small class=\"form-text text-danger\"\n                          *ngIf=\"!register.get('password').valid && register.get('password').touched\"> Please enter a \n                          password</small>\n                      </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!register.valid\">Submit</button>\n                      <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n                    </div>\n                  </form>\n                </div>\n              </ng-template>\n              <!-- Edit Record Modal Window -->\n              <ng-template #editRecord let-modal>\n                <div class=\"modal-header editRowModal\">\n                  <h4 class=\"modal-title\" id=\"modal-basic-title\">\n                    <div class=\"table-modal-header\">\n                      <img [src]='selectedRowData?.img' alt=\"avatar\">\n                      <div class=\"modal-about\">\n                        <div class=\"font-weight-bold p-t-10 font-17\">\n                          {{selectedRowData?.firstName}}\n                          {{selectedRowData?.lastName}}</div>\n                      </div>\n                    </div>\n                  </h4>\n                  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                    <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                  </button>\n                </div>\n                <div class=\"modal-body\">\n                  <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                   \n                    <div class=\"row\">\n                      <div class=\"col-lg-6\">\n                        <label>name <span class=\"text-danger\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"name\" formControlName=\"username\"\n                          required>\n                        <small class=\"form-text text-danger\"\n                          *ngIf=\"!editForm.get('username').valid && editForm.get('username').touched\">username is\n                          required</small>\n                      </div>\n      \n\n                      <div class=\"col-lg-6\">\n                        <label>Phone<span class=\"text-danger\">*</span></label>\n                        <input type=\"number\" class=\"form-control\" placeholder=\"Phone\" formControlName=\"phone\" required>\n                        <small class=\"form-text text-danger\"\n                          *ngIf=\"!editForm.get('phone').valid && editForm.get('phone').touched\"> Phone is\n                          required</small>\n                      </div>\n                \n                      <div class=\"col-lg-6\">\n                        <label>Email<span class=\"text-danger\">*</span></label>\n                        <input type=\"email\" class=\"form-control\" placeholder=\"Email\" formControlName=\"email\" required>\n                        <small class=\"form-text text-danger\"\n                          *ngIf=\"!editForm.get('email').valid && editForm.get('email').touched\"> Please enter a valid\n                          email address</small>\n                      </div>\n                \n                      <div class=\"col-lg-6\">\n                        <label>Password<span class=\"text-danger\">*</span></label>\n                        <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"password\" required>\n                        <small class=\"form-text text-danger\"\n                          *ngIf=\"!editForm.get('password').valid && editForm.get('password').touched\"> Please enter a \n                          password</small>\n                      </div>\n\n                    </div>\n                    <div class=\"modal-footer\">\n                      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!editForm.valid\">Save</button>\n                      <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close()\">Close</button>\n                    </div>\n                  </form>\n                </div>\n              </ng-template>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n  ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CustomerRoutingModule } from './customer-routing.module';\nimport { CustomerComponent } from './customer.component';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { ToastrModule } from 'ngx-toastr';\n\n@NgModule({\n  declarations: [CustomerComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CustomerRoutingModule,\n    NgxDatatableModule,\n    ToastrModule.forRoot(),\n  ],\n})\nexport class CustomerModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CustomerComponent } from './customer.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CustomerComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CustomerRoutingModule {}\n"],"sourceRoot":"webpack:///"}