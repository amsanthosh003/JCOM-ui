{"version":3,"sources":["webpack:///src/app/user/user.component.ts","webpack:///src/app/user/user.component.html","webpack:///src/app/user/user.module.ts","webpack:///src/app/user/user-routing.module.ts"],"names":["UserComponent","fb","modalService","toastr","request","rows","scrollBarHorizontal","window","innerWidth","newUserImg","data","filteredData","loadingIndicator","isRowSelected","reorderable","selected","columns","name","genders","id","value","statusType","designationType","editForm","group","username","required","pattern","phone","email","minLength","password","Designation","onresize","splice","length","push","fire","title","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","forEach","row","deleteRecord","deleteRecordSuccess","viewdata","designation","register","cb","getuser","subscribe","response","console","log","error","getdesignation","designations","content","open","ariaLabelledBy","size","patchValue","getId","img","rowIndex","fetchuserById","_id","editcustmergroup","custmernamevalue","custmerphonevalue","custmeremailvalue","custmerpasswordvalue","custmerdesignationvalue","IdValue","setValue","selectedRowData","deleteuser","array","filter","element","form","adduser","res","status","reset","dismissAll","addRecordSuccess","fetch","Customers","setTimeout","edata","updateuser","editRecordSuccess","event","val","target","toLowerCase","colsAmt","keys","Object","item","i","toString","indexOf","table","offset","min","max","Math","floor","random","success","count","filterDatatable","addRow","deleteSelected","onSelect","selector","templateUrl","styleUrls","providers","table2","UserModule","forRoot","declarations","imports","routes","path","component","UserRoutingModule","forChild","exports"],"mappings":"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","file":"user-user-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport {\n  FormGroup,\n  FormBuilder,\n  FormControl,\n  Validators,\n} from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport Swal from 'sweetalert2';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { RequestService } from \"../services/request.service\";\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.sass'],\n  providers: [ToastrService],\n})\nexport class UserComponent implements OnInit {\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  rows = [];\n  scrollBarHorizontal = window.innerWidth < 1200;\n  selectedRowData: selectRowInterface;\n  newUserImg = 'assets/images/users/user-2.png';\n  data = [];\n  public Customers: any;\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  loadingIndicator = true;\n  isRowSelected = false;\n  selectedOption: string;\n  reorderable = true;\n  editcustmergroup: any;\n  public selected: any[] = [];\n  custmernamevalue:any;\n  custmerphonevalue:any;\n  custmeremailvalue:any;\n  custmerpasswordvalue:any;\n  columns = [\n    { name: 'username' },\n    { name: 'phone' },\n    { name: 'email' },\n    { name: 'password' }\n  ];\n  genders = [\n    { id: '1', value: 'male' },\n    { id: '2', value: 'female' },\n  ];\n  statusType = [\n    { id: '1', value: 'Active' },\n    { id: '2', value: 'Completed' },\n    { id: '3', value: 'Pending' },\n  ];\n  designationType = [\n    { id: '1', value: 'Manager' },\n    { id: '2', value: 'Team Leader' },\n    { id: '3', value: 'Clerk' },\n  ];\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n  error: string;\n  IdValue: any;\n  designations: any;\n  custmerdesignationvalue: any;\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n    private toastr: ToastrService,private request: RequestService\n  ) {\n    this.editForm = this.fb.group({\n      username: ['', [Validators.required, Validators.pattern('[a-zA-Z]+')]],\n      phone: ['', [Validators.required]],\n      email: [\n        '',\n        [Validators.required, Validators.email, Validators.minLength(5)],\n      ],\n      password: ['', [Validators.required]],\n      Designation: ['', [Validators.required]]\n    });\n    window.onresize = () => {\n      this.scrollBarHorizontal = window.innerWidth < 1200;\n    };\n  }\n  // select record using check box\n  onSelect({ selected }) {\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n\n    if (this.selected.length === 0) {\n      this.isRowSelected = false;\n    } else {\n      this.isRowSelected = true;\n    }\n  }\n  deleteSelected() {\n    Swal.fire({\n      title: 'Are you sure?',\n      showCancelButton: true,\n      confirmButtonColor: '#8963ff',\n      cancelButtonColor: '#fb7823',\n      confirmButtonText: 'Yes',\n    }).then((result) => {\n      if (result.value) {\n        this.selected.forEach((row) => {\n          this.deleteRecord(row);\n        });\n        this.deleteRecordSuccess(this.selected.length);\n        this.selected = [];\n        this.isRowSelected = false;\n      }\n    });\n  }\n  ngOnInit() {\n    this.viewdata();\n    this.designation();\n    this.register = this.fb.group({\n      username: ['', [Validators.required, Validators.pattern('[a-zA-Z]+')]],\n      phone: ['', [Validators.required]],\n      email: [\n        '',\n        [Validators.required, Validators.email, Validators.minLength(5)],\n      ],\n      password: ['', [Validators.required]],\n      Designation: ['', [Validators.required]]\n    });\n  }\n  // fetch data\n  fetch(cb) {\n\n    this.request.getuser().subscribe((response) => {\n     console.log(response);\n     \n              cb(response);\n    }, (error) => {\n      console.log(error);\n    });\n\n  }\n\n  designation() {\n    this.request.getdesignation().subscribe((response) => {\n  this.designations=response;\n  console.log(this.designations);\n    }, (error) => {\n      console.log(error);\n    });\n\n  }\n\n\n\n  // add new record\n  addRow(content) {\n    this.modalService.open(content, {\n      ariaLabelledBy: 'modal-basic-title',\n      size: 'lg',\n    });\n    this.register.patchValue({\n      id: this.getId(10, 100),\n      img: this.newUserImg,\n    });\n\n  }\n  // edit record\n  editRow(row, rowIndex, content) {\n    this.modalService.open(content, {\n      ariaLabelledBy: 'modal-basic-title',\n      size: 'lg',\n    });\n\n\n\n    this.request.fetchuserById(row._id).subscribe((response) => {\n      this.editcustmergroup=response[0];\n      console.log(response);\n        this.custmernamevalue=this.editcustmergroup.username;\n        this.custmerphonevalue=this.editcustmergroup.phone;\n        this.custmeremailvalue=this.editcustmergroup.email;\n        this.custmerpasswordvalue=this.editcustmergroup.password;\n        this.custmerdesignationvalue=this.editcustmergroup.Designation;\n        this.IdValue=this.editcustmergroup._id;\n\n      //   this.editForm = this.formBuilder.group({\n      //     CountryName2:[this.CountryValue, Validators.required],\n      //     Countrycode2:[this.CountrycodeValue, Validators.required]\n      // });\n      // console.log(this.editForm.value);\n\n\n\n      this.editForm.setValue({\n        username: this.custmernamevalue,\n        phone: this.custmerphonevalue,\n        email: this.custmeremailvalue,\n        password: this.custmerpasswordvalue,\n        Designation: this.custmerdesignationvalue,\n      });\n      this.selectedRowData = row;\n\n    });\n\n\n\n\n  }\n  // delete single row\n  deleteSingleRow(row) {\n    Swal.fire({\n      title: 'Are you sure?',\n      showCancelButton: true,\n      confirmButtonColor: '#8963ff',\n      cancelButtonColor: '#fb7823',\n      confirmButtonText: 'Yes',\n    }).then((result) => {\n      if (result.value) {\n        this.deleteRecord(row);\n        this.deleteRecordSuccess(1);\n      }\n    });\n  }\n\n  deleteRecord(row) {\n    console.log(\"row\",row._id);\n    this.request.deleteuser(row._id).subscribe((response) => {\n      console.log(response);\n      this.viewdata();\n     }, (error) => {\n       console.log(error);\n     });\n  }\n\n  arrayRemove(array, id) {\n    return array.filter(function (element) {\n      return element.id !== id;\n    });\n  }\n  // save add new record\n  onAddRowSave(form: FormGroup) {\n  \n    console.log(form.value);\n    this.request.adduser(form.value).subscribe((res: any) => {\n      if (res.status == 'success') {\n        console.log(res);\n        form.reset();\n    this.modalService.dismissAll();\n    this.viewdata();\n    this.addRecordSuccess();\n\n      }\n      else if (res.status == 'error') {\n        console.log(\"res\",res);\n        form.reset();\n    this.modalService.dismissAll();\n      }\n    }, (error) => {\n      console.log(\"error\",error);\n      form.reset();\n      this.modalService.dismissAll();\n    });\n\n\n  }\n\n\n\nviewdata(){\n  this.fetch((data) => {\n    this.data = data;\n    // this.filteredData = data;\n    this.Customers=data.response;\n    this.filteredData=data.response;\n    setTimeout(() => {\n      this.loadingIndicator = false;\n    }, 500);\n  });\n}\n\n  // save record on edit\n  onEditSave(form: FormGroup) {\n\n    const edata = {\n      username: form.value.username,\n      phone: form.value.phone,\n      email: form.value.email,\n      password: form.value.password,\n      Designation:form.value.Designation\n  }\n  this.request.updateuser(this.IdValue,edata).subscribe((res : any) => {\n    if (res.status == 'success') {\n      this.modalService.dismissAll();\n      this.viewdata();\n      this.editRecordSuccess();\n      return true;\n    }\n    else if (res.status == 'error') {\n      this.modalService.dismissAll();\n    }\n\n  }, (error) => {\n    console.log(error);\n    this.modalService.dismissAll();\n  });\n\n  }\n  // filter table data\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys( this.filteredData[0]);\n    // console.log(\"keys\",\"\"+keys);\n    // assign filtered matches to the active datatable\n    this.Customers = this.filteredData.filter(function (item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]].toString().toLowerCase().indexOf(val) !== -1 ||\n          !val\n        ) {\n           \n      \n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  // get random id\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  addRecordSuccess() {\n    this.toastr.success('Add Record Successfully', '');\n  }\n  editRecordSuccess() {\n    this.toastr.success('Edit Record Successfully', '');\n  }\n  deleteRecordSuccess(count) {\n    this.toastr.error(count + ' Records Deleted Successfully', '');\n  }\n}\nexport interface selectRowInterface {\n  img: String;\n  firstName: String;\n  lastName: String;\n}\n","<section class=\"main-content\">\n\n    <div class=\"section-body\" style=\"margin-top: 20px;\">\n      <div class=\"row clearfix\">\n        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n          <div class=\"card\">\n            <div class=\"p-10\">\n              <div class=\"row\">\n                <div class=\"col-lg-6\">\n                  <div class=\"row m-0\">\n                    <div class=\"col-lg-3 p-0\">\n                      <div class=\"ngxTableHeader\">\n                        <div class=\"table-title\">\n                          <h2><strong>User</strong></h2>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col-lg-5 p-0\">\n                      <div class=\"ngxTableHeader\">\n                        <div class=\"table-search-area\">\n                          <div>\n                            <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                            <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                              (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col-lg-4 p-0\">\n                      <div class=\"ngxTableHeader\">\n                        <div class=\"header-buttons-left\">\n                          <div class=\"icon-button-demo buttons\">\n                            <button class=\"btn btn-icon icon-left btn-primary rounded-button\" (click)='addRow(addRecord)'>\n                              <i class=\"material-icons\">add</i>\n                            </button>\n                            <button [hidden]=!isRowSelected class=\"btn btn-icon icon-left btn-danger rounded-button\"\n                              (click)='deleteSelected()'>\n                              <i class=\"material-icons\">delete</i>\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <ngx-datatable #table class=\"material\" [rows]=\"Customers\" [loadingIndicator]=\"loadingIndicator\"\n                columnMode=\"force\" [headerHeight]=\"60\" [footerHeight]=\"80\" rowHeight=\"auto\" [limit]=\"10\"\n                [scrollbarH]=\"scrollBarHorizontal\" [reorderable]=\"reorderable\" [selected]=\"selected\"\n                [selectionType]=\"'checkbox'\" (select)='onSelect($event)'>\n  \n                <ngx-datatable-column [width]=\"70\" [sortable]=\"false\" [draggable]=\"false\" [resizeable]=\"false\"\n                  [canAutoResize]=\"false\" [headerCheckboxable]=\"true\" [checkboxable]=\"true\">\n                </ngx-datatable-column>\n  \n                <ngx-datatable-column [width]=\"200\" name=\"Name\">\n                  <ng-template let-row=\"row\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>\n                    <div class=\"name-col-style\">\n                      <div>{{row.username}}</div>   \n                    </div>\n                  </ng-template>\n                </ngx-datatable-column>\n          \n                <ngx-datatable-column name=\"Phone\">\n                  <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                    {{row.phone}}\n                  </ng-template>\n                </ngx-datatable-column>\n                <ngx-datatable-column name=\"Email\">                  \n                  <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                    {{row.email}}\n                  </ng-template>\n                </ngx-datatable-column>\n                <ngx-datatable-column name=\"Designation\">                  \n                  <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                    {{row.designationDetails[0].designation}}\n                  </ng-template>\n                </ngx-datatable-column>\n               \n                <ngx-datatable-column [width]=\"100\" name=\"Actions\" sortable=\"false\">\n                  <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\" ngx-datatable-cell-template>\n                    <span>\n                      <button class=\"btn btn-tbl-edit h-auto\" (click)='editRow(row, rowIndex, editRecord)'>\n                        <i class=\"fas fa-pen\"></i>\n                      </button>\n                      <button class=\"btn btn-tbl-delete h-auto\" (click)='deleteSingleRow(row)'>\n                        <i class=\"far fa-trash-alt\"></i>\n                      </button>\n                    </span>\n                  </ng-template>\n                </ngx-datatable-column>\n              </ngx-datatable>\n              <!-- Add Record Modal Window -->\n              <ng-template #addRecord let-modal>\n                <div class=\"modal-header editRowModal\">\n                  <h4 class=\"modal-title\" id=\"modal-basic-title\">\n                    <div class=\"table-modal-header\">\n                      <img [src]='newUserImg' alt=\"avatar\">\n                      <div class=\"modal-about\">\n                        <div class=\"font-weight-bold p-t-10 font-17\">\n                          New Customer</div>\n                      </div>\n                    </div>\n                  </h4>\n                  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n                    <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                  </button>\n                </div>\n                <div class=\"modal-body\">\n                  <form class=\"register-form\" [formGroup]=\"register\" (ngSubmit)=\"onAddRowSave(register)\">\n                    <!-- <div class=\"input-field col s12 d-none\">\n                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                    </div>\n                    <div class=\"input-field col s12 d-none\">\n                      <input formControlName=\"img\" class=\"form-control\" type=\"hidden\">\n                    </div> -->\n                    <div class=\"row\">\n                      <div class=\"col-lg-6\">\n                        <label>name <span class=\"text-danger\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"name\" formControlName=\"username\"\n                          required>\n                        <small class=\"form-text text-danger\"\n                          *ngIf=\"!register.get('username').valid && register.get('username').touched\">username is\n                          required</small>\n                      </div>\n      \n\n                      <div class=\"col-lg-6\">\n                        <label>Phone<span class=\"text-danger\">*</span></label>\n                        <input type=\"number\" class=\"form-control\" placeholder=\"Phone\" formControlName=\"phone\" required>\n                        <small class=\"form-text text-danger\"\n                          *ngIf=\"!register.get('phone').valid && register.get('phone').touched\"> Phone is\n                          required</small>\n                      </div>\n                \n                      <div class=\"col-lg-6\">\n                        <label>Email<span class=\"text-danger\">*</span></label>\n                        <input type=\"email\" class=\"form-control\" placeholder=\"Email\" formControlName=\"email\" required>\n                        <small class=\"form-text text-danger\"\n                          *ngIf=\"!register.get('email').valid && register.get('email').touched\"> Please enter a valid\n                          email address</small>\n                      </div>\n                \n                      <div class=\"col-lg-6\">\n                        <label>Password<span class=\"text-danger\">*</span></label>\n                        <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"password\" required>\n                        <small class=\"form-text text-danger\"\n                          *ngIf=\"!register.get('password').valid && register.get('password').touched\"> Please enter a \n                          password</small>\n                      </div>\n\n               \n                      <div class=\"col-lg-6\">\n                        <label>Designation <span class=\"text-danger\">*</span></label>\n                        <select class=\"form-control\" formControlName=\"Designation\" required>\n                          <option value=\"\" selected disabled>Please select</option>\n                          <option *ngFor=\"let designation of designations?.response\" [value]=\"designation._id\">\n                            {{designation.designation}}\n                          </option>\n                        </select>\n                      </div>\n\n                    </div>\n                    <div class=\"modal-footer\">\n                      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!register.valid\">Submit</button>\n                      <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n                    </div>\n                  </form>\n                </div>\n              </ng-template>\n              <!-- Edit Record Modal Window -->\n              <ng-template #editRecord let-modal>\n                <div class=\"modal-header editRowModal\">\n                  <h4 class=\"modal-title\" id=\"modal-basic-title\">\n                    <div class=\"table-modal-header\">\n                      <img [src]='selectedRowData?.img' alt=\"avatar\">\n                      <div class=\"modal-about\">\n                        <div class=\"font-weight-bold p-t-10 font-17\">\n                          {{selectedRowData?.firstName}}\n                          {{selectedRowData?.lastName}}</div>\n                      </div>\n                    </div>\n                  </h4>\n                  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                    <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                  </button>\n                </div>\n                <div class=\"modal-body\">\n                  <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                   \n                    <div class=\"row\">\n                      <div class=\"col-lg-6\">\n                        <label>name <span class=\"text-danger\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"name\" formControlName=\"username\"\n                          required>\n                        <small class=\"form-text text-danger\"\n                          *ngIf=\"!editForm.get('username').valid && editForm.get('username').touched\">username is\n                          required</small>\n                      </div>\n      \n\n                      <div class=\"col-lg-6\">\n                        <label>Phone<span class=\"text-danger\">*</span></label>\n                        <input type=\"number\" class=\"form-control\" placeholder=\"Phone\" formControlName=\"phone\" required>\n                        <small class=\"form-text text-danger\"\n                          *ngIf=\"!editForm.get('phone').valid && editForm.get('phone').touched\"> Phone is\n                          required</small>\n                      </div>\n                \n                      <div class=\"col-lg-6\">\n                        <label>Email<span class=\"text-danger\">*</span></label>\n                        <input type=\"email\" class=\"form-control\" placeholder=\"Email\" formControlName=\"email\" required>\n                        <small class=\"form-text text-danger\"\n                          *ngIf=\"!editForm.get('email').valid && editForm.get('email').touched\"> Please enter a valid\n                          email address</small>\n                      </div>\n                \n                      <div class=\"col-lg-6\">\n                        <label>Password<span class=\"text-danger\">*</span></label>\n                        <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"password\" required>\n                        <small class=\"form-text text-danger\"\n                          *ngIf=\"!editForm.get('password').valid && editForm.get('password').touched\"> Please enter a \n                          password</small>\n                      </div>\n\n\n\n                      <div class=\"col-lg-6\">\n                        <label>Designation <span class=\"text-danger\">*</span></label>\n                        <select class=\"form-control\" formControlName=\"Designation\" required>\n                          <option value=\"\" selected disabled>Please select</option>\n                          <option *ngFor=\"let designation of designations?.response\" [value]=\"designation._id\">\n                            {{designation.designation}}\n                          </option>\n                        </select>\n                      </div>\n\n                     \n\n\n                    </div>\n                    <div class=\"modal-footer\">\n                      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!editForm.valid\">Save</button>\n                      <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close()\">Close</button>\n                    </div>\n                  </form>\n                </div>\n              </ng-template>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n  ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UserRoutingModule } from './user-routing.module';\nimport { UserComponent } from './user.component';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { ToastrModule } from 'ngx-toastr';\nimport { ArchwizardModule } from 'angular-archwizard';\n\n\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [UserComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    UserRoutingModule,\n    NgxDatatableModule,\n    HttpClientModule,\n    ToastrModule.forRoot(),ArchwizardModule\n  ]\n})\nexport class UserModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserComponent } from './user.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule {}\n"]}