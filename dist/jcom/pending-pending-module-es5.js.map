{"version":3,"sources":["webpack:///src/app/pending/pending.component.ts","webpack:///src/app/pending/pending.component.html","webpack:///src/app/pending/pending.module.ts","webpack:///src/app/pending/pending-routing.module.ts"],"names":["PendingComponent","fb","modalService","toastr","request","router","rows","scrollBarHorizontal","window","innerWidth","newUserImg","data","filteredData","loadingIndicator","isRowSelected","reorderable","selected","columns","name","VechicleTypes","id","value","statusType","designationType","basePath","editForm","group","username","required","pattern","phone","email","minLength","password","Bookdate","Amount","TotalKm","onresize","viewdata","fetch","Customers","response","setTimeout","cb","getpending","subscribe","console","log","error","array","filter","element","row","rowIndex","content","open","ariaLabelledBy","size","fetchpendingagreegationById","_id","editcustmergroup","custmerpickuplocationvalue","Pickuploc","custmerDroplocationvalue","Droploc","custmerVechicaltypevalue","Vechicaltype","custmervehiclenamevalue","vechicalDetails","Name","custmerBookdatenvalue","custmerAmountnvalue","custmerTotalKmnvalue","IdValue","setValue","selectedRowData","event","val","target","toLowerCase","colsAmt","length","keys","Object","item","i","toString","indexOf","table","offset","min","max","Math","floor","random","success","count","filterDatatable","selector","templateUrl","styleUrls","providers","table2","PendingModule","forRoot","declarations","imports","routes","path","component","PendingRoutingModule","forChild","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACuEsB;;;;;;AAAA;;;;;;AAMA;;;;;;AAAA;;;;;;AAOA;;;;;;AAAA;;;;;;AAOA;;;;;;AAAA;;;;;;AAMA;;;;;;AAAA;;;;;;AAMA;;;;;;AAAA;;;;;;AAOA;;;;;;AAAA;;;;;;AAQF;;;;;;AAAA;;;;;;;;AAqBA;;AACE;;AAAwC;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACtC;;AACF;;AAIF;;;;;;AAiCE;;AAC8E;;AACpE;;;;;;AAOV;;AACyE;;AAC/D;;;;;;AAMV;;AACyE;;AAC1D;;;;;;AAMf;;AAC+E;;AACrE;;;;;;;;AAtDlB;;AACE;;AACE;;AACE;;AACA;;AACE;;AACE;;AAAY;;AAChB;;AACF;;AACF;;AACA;;AAAuD;AAAA;AAAA,mBAAS,mBAAT;AAAwB,WAAxB;;AACrD;;AAAyB;;AAA0B;;AAAK;;AAAI;;AAC9D;;AACF;;AACA;;AACE;;AAAmD;AAAA;;AAAA;;AAAA;AAAA;;AAOjD;;AACE;;AACE;;AAAO;;AAAK;;AAA0B;;AAAC;;AAAO;;AAC9C;;AAEA;;AAGF;;AAGA;;AACE;;AAAO;;AAAK;;AAA0B;;AAAC;;AAAO;;AAC9C;;AACA;;AAGF;;AAEA;;AACE;;AAAO;;AAAK;;AAA0B;;AAAC;;AAAO;;AAC9C;;AACA;;AAGF;;AAEA;;AACE;;AAAO;;AAAQ;;AAA0B;;AAAC;;AAAO;;AACjD;;AACA;;AAGF;;AAaF;;AACA;;AACE;;AAA2E;;AAAM;;AACjF;;AAA4C;AAAA;AAAA,mBAAS,gBAAY,aAAZ,CAAT;AAAmC,WAAnC;;AAAqC;;AAAK;;AACxF;;AACF;;AACF;;;;;;AAvEW;;AAAA;;AAYmB;;AAAA;;AAanB;;AAAA;;AASA;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAiByC;;AAAA;;;;;;AA+B5C;;AAC8E;;AACpE;;;;;;AAQV;;AACyE;;AAC/D;;;;;;AAMV;;AACyE;;AAC1D;;;;;;AAMf;;AAC+E;;AACrE;;;;;;AAMV;;AAC+E;;AACrE;;;;;;AAMV;;AAC2E;;AACnE;;;;;;AAOR;;AAC6E;;AACpE;;;;;;;;AA5EjB;;AACE;;AACE;;AAEE;;AAKF;;AACF;;AACA;;AAAuD;AAAA;AAAA,mBAAS,kBAAc,aAAd,CAAT;AAAqC,WAArC;;AACrD;;AAAyB;;AAA0B;;AAAK;;AAAI;;AAC9D;;AACF;;AACA;;AACE;;AAA6B;AAAA;;AAAA;;AAAA;AAAA;;AAE3B;;AACE;;AACE;;AAAO;;AAAe;;AAA0B;;AAAC;;AAAO;;AACxD;;AAEA;;AAGF;;AAGA;;AACE;;AAAO;;AAAY;;AAA0B;;AAAC;;AAAO;;AACrD;;AACE;;AAAA;;AACF;;AAGF;;AAEA;;AACE;;AAAO;;AAAW;;AAA0B;;AAAC;;AAAO;;AACpD;;AACA;;AAGF;;AAEA;;AACE;;AAAO;;AAAW;;AAA0B;;AAAC;;AAAO;;AACpD;;AACA;;AAGF;;AAEA;;AACE;;AAAO;;AAAQ;;AAA0B;;AAAC;;AAAO;;AACjD;;AACA;;AAGF;;AAEA;;AACE;;AAAO;;AAAM;;AAA0B;;AAAC;;AAAO;;AAC/C;;AACA;;AAGF;;AAGA;;AACE;;AAAO;;AAAO;;AAA0B;;AAAC;;AAAO;;AAChD;;AACA;;AAGF;;AAEF;;AACA;;AAEE;;AAA4C;AAAA;AAAA,mBAAS,iBAAT;AAAsB,WAAtB;;AAAwB;;AAAK;;AAC3E;;AACF;;AACF;;;;;;AArEQ;;AAAA;;AAQG;;AAAA;;AAUA;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AASA;;AAAA;;;;UDtRZA,gB;AAyEX,kCAAqBC,EAArB,EACUC,YADV,EAEUC,MAFV,EAEwCC,OAFxC,EAEwEC,MAFxE,EAEwF;AAAA;;AAAA;;AAFnE,eAAAJ,EAAA,GAAAA,EAAA;AACX,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AAA8B,eAAAC,OAAA,GAAAA,OAAA;AAAgC,eAAAC,MAAA,GAAAA,MAAA;AAzExE,eAAAC,IAAA,GAAO,EAAP;AACA,eAAAC,mBAAA,GAAsBC,MAAM,CAACC,UAAP,GAAoB,IAA1C;AAEA,eAAAC,UAAA,GAAa,gCAAb;AACA,eAAAC,IAAA,GAAO,EAAP;AAEA,eAAAC,YAAA,GAAe,EAAf;AAGA,eAAAC,gBAAA,GAAmB,IAAnB;AACA,eAAAC,aAAA,GAAgB,KAAhB;AAEA,eAAAC,WAAA,GAAc,IAAd;AAEO,eAAAC,QAAA,GAAkB,EAAlB;AAWP,eAAAC,OAAA,GAAU,CACR;AAAEC,gBAAI,EAAE;AAAR,WADQ,EAER;AAAEA,gBAAI,EAAE;AAAR,WAFQ,EAGR;AAAEA,gBAAI,EAAE;AAAR,WAHQ,EAIR;AAAEA,gBAAI,EAAE;AAAR,WAJQ,EAKR;AAAEA,gBAAI,EAAE;AAAR,WALQ,EAMR;AAAEA,gBAAI,EAAE;AAAR,WANQ,CAAV;AAQA,eAAAC,aAAA,GAAgB,CACd;AAAEC,cAAE,EAAE,GAAN;AAAWC,iBAAK,EAAE;AAAlB,WADc,EAEd;AAAED,cAAE,EAAE,GAAN;AAAWC,iBAAK,EAAE;AAAlB,WAFc,EAGd;AAAED,cAAE,EAAE,GAAN;AAAWC,iBAAK,EAAE;AAAlB,WAHc,CAAhB;AAKA,eAAAC,UAAA,GAAa,CACX;AAAEF,cAAE,EAAE,GAAN;AAAWC,iBAAK,EAAE;AAAlB,WADW,EAEX;AAAED,cAAE,EAAE,GAAN;AAAWC,iBAAK,EAAE;AAAlB,WAFW,EAGX;AAAED,cAAE,EAAE,GAAN;AAAWC,iBAAK,EAAE;AAAlB,WAHW,CAAb;AAKA,eAAAE,eAAA,GAAkB,CAChB;AAAEH,cAAE,EAAE,GAAN;AAAWC,iBAAK,EAAE;AAAlB,WADgB,EAEhB;AAAED,cAAE,EAAE,GAAN;AAAWC,iBAAK,EAAE;AAAlB,WAFgB,EAGhB;AAAED,cAAE,EAAE,GAAN;AAAWC,iBAAK,EAAE;AAAlB,WAHgB,CAAlB;AAWQ,eAAAG,QAAA,GAAW,UAAX;AAqBJ,eAAKC,QAAL,GAAgB,KAAKxB,EAAL,CAAQyB,KAAR,CAAc;AAC5BC,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWC,OAAX,CAAmB,WAAnB,CAAtB,CAAL,CADkB;AAE5BC,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWF,QAAZ,CAAL,CAFqB;AAG5BG,iBAAK,EAAE,CACL,EADK,EAEL,CAAC,0DAAWH,QAAZ,EAAsB,0DAAWG,KAAjC,EAAwC,0DAAWC,SAAX,CAAqB,CAArB,CAAxC,CAFK,CAHqB;AAO5BC,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWL,QAAZ,CAAL,CAPkB;AAQ5BM,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWN,QAAZ,CAAL,CARkB;AAS5BO,kBAAM,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWP,QAAZ,CAAL,CAToB;AAU5BQ,mBAAO,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWR,QAAZ,CAAL;AAVmB,WAAd,CAAhB;;AAYApB,gBAAM,CAAC6B,QAAP,GAAkB,YAAM;AACtB,iBAAI,CAAC9B,mBAAL,GAA2BC,MAAM,CAACC,UAAP,GAAoB,IAA/C;AACD,WAFD;AAKD;;;;iBAEH,oBAAQ;AAAA;;AACN,iBAAK6B,QAAL;;AACA9B,kBAAM,CAAC6B,QAAP,GAAkB,YAAM;AACtB,oBAAI,CAAC9B,mBAAL,GAA2BC,MAAM,CAACC,UAAP,GAAoB,IAA/C;AACD,aAFD;AAGD;;;iBACD,oBAAQ;AAAA;;AACN,iBAAK8B,KAAL,CAAW,UAAC5B,IAAD,EAAU;AACnB,oBAAI,CAACA,IAAL,GAAYA,IAAZ,CADmB,CAEnB;;AACA,oBAAI,CAAC6B,SAAL,GAAe7B,IAAI,CAAC8B,QAApB;AACA,oBAAI,CAAC7B,YAAL,GAAkBD,IAAI,CAAC8B,QAAvB;AACAC,wBAAU,CAAC,YAAM;AACf,sBAAI,CAAC7B,gBAAL,GAAwB,KAAxB;AACD,eAFS,EAEP,GAFO,CAAV;AAGD,aARD;AASD,W,CACA;;;;iBACA,eAAM8B,EAAN,EAAU;AACT,iBAAKvC,OAAL,CAAawC,UAAb,GAA0BC,SAA1B,CAAoC,UAACJ,QAAD,EAAc;AACjDK,qBAAO,CAACC,GAAR,CAAYN,QAAZ;AACCE,gBAAE,CAACF,QAAD,CAAF;AACD,aAHD,EAGG,UAACO,KAAD,EAAW;AACZF,qBAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,aALD;AAOD;;;iBACD,qBAAYC,KAAZ,EAAmB7B,EAAnB,EAAuB;AACrB,mBAAO6B,KAAK,CAACC,MAAN,CAAa,UAAUC,OAAV,EAAmB;AACrC,qBAAOA,OAAO,CAAC/B,EAAR,KAAeA,EAAtB;AACD,aAFM,CAAP;AAGD,W,CAEF;;;;iBACA,iBAAQgC,GAAR,EAAaC,QAAb,EAAuBC,OAAvB,EAAgC;AAAA;;AAC/B,iBAAKpD,YAAL,CAAkBqD,IAAlB,CAAuBD,OAAvB,EAAgC;AAC9BE,4BAAc,EAAE,mBADc;AAE9BC,kBAAI,EAAE;AAFwB,aAAhC;AAKFX,mBAAO,CAACC,GAAR,CAAY,MAAZ;AAEA,iBAAK3C,OAAL,CAAasD,2BAAb,CAAyCN,GAAG,CAACO,GAA7C,EAAkDd,SAAlD,CAA4D,UAACJ,QAAD,EAAc;AACxE,oBAAI,CAACmB,gBAAL,GAAsBnB,QAAtB;AACAK,qBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,MAAI,CAACa,gBAAhC;AACE,oBAAI,CAACC,0BAAL,GAAgC,MAAI,CAACD,gBAAL,CAAsB,CAAtB,EAAyBE,SAAzD;AACA,oBAAI,CAACC,wBAAL,GAA8B,MAAI,CAACH,gBAAL,CAAsB,CAAtB,EAAyBI,OAAvD;AACA,oBAAI,CAACC,wBAAL,GAA8B,MAAI,CAACL,gBAAL,CAAsB,CAAtB,EAAyBM,YAAvD;AACA,oBAAI,CAACC,uBAAL,GAA6B,MAAI,CAACP,gBAAL,CAAsB,CAAtB,EAAyBQ,eAAzB,CAAyC,CAAzC,EAA4CC,IAAzE;AACA,oBAAI,CAACC,qBAAL,GAA2B,MAAI,CAACV,gBAAL,CAAsB,CAAtB,EAAyB1B,QAApD;AACA,oBAAI,CAACqC,mBAAL,GAAyB,MAAI,CAACX,gBAAL,CAAsB,CAAtB,EAAyBzB,MAAlD;AACA,oBAAI,CAACqC,oBAAL,GAA0B,MAAI,CAACZ,gBAAL,CAAsB,CAAtB,EAAyBxB,OAAnD;AACA,oBAAI,CAACqC,OAAL,GAAa,MAAI,CAACb,gBAAL,CAAsBD,GAAnC,CAVsE,CAYxE;AACA;AACA;AACA;AACA;;AAIA,oBAAI,CAAClC,QAAL,CAAciD,QAAd,CAAuB;AACrB/C,wBAAQ,EAAE,MAAI,CAACkC,0BADM;AAErB/B,qBAAK,EAAE,MAAI,CAACiC,wBAFS;AAGrBhC,qBAAK,EAAE,MAAI,CAACkC,wBAHS;AAIrBhC,wBAAQ,EAAE,MAAI,CAACkC,uBAJM;AAKrBjC,wBAAQ,EAAC,MAAI,CAACoC,qBALO;AAMrBnC,sBAAM,EAAC,MAAI,CAACoC,mBANS;AAOrBnC,uBAAO,EAAC,MAAI,CAACoC;AAPQ,eAAvB;;AASA,oBAAI,CAACG,eAAL,GAAuBvB,GAAvB;AAED,aA/BD;AAgCE,W,CACF;;;;iBACA,yBAAgBwB,KAAhB,EAAuB;AACrB;AACA,gBAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAazD,KAAb,CAAmB0D,WAAnB,EAAZ,CAFqB,CAGrB;;AACA,gBAAMC,OAAO,GAAG,KAAK/D,OAAL,CAAagE,MAA7B,CAJqB,CAKrB;;AACA,gBAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAa,KAAKtE,YAAL,CAAkB,CAAlB,CAAb,CAAb,CANqB,CAOrB;AACA;;AACA,iBAAK4B,SAAL,GAAiB,KAAK5B,YAAL,CAAkBsC,MAAlB,CAAyB,UAAUkC,IAAV,EAAgB;AACxD;AACA,mBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,OAApB,EAA6BK,CAAC,EAA9B,EAAkC;AAChC;AACA,oBACED,IAAI,CAACF,IAAI,CAACG,CAAD,CAAL,CAAJ,CAAcC,QAAd,GAAyBP,WAAzB,GAAuCQ,OAAvC,CAA+CV,GAA/C,MAAwD,CAAC,CAAzD,IACA,CAACA,GAFH,EAGE;AAGA,yBAAO,IAAP;AACD;AACF;AACF,aAbgB,CAAjB,CATqB,CAuBrB;;AACA,iBAAKW,KAAL,CAAWC,MAAX,GAAoB,CAApB;AACD,W,CACD;;;;iBACA,eAAMC,GAAN,EAAWC,GAAX,EAAgB;AACd;AACA,mBAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;AACD;;;iBACD,4BAAmB;AACjB,iBAAKvF,MAAL,CAAY4F,OAAZ,CAAoB,yBAApB,EAA+C,EAA/C;AACD;;;iBACD,6BAAoB;AAClB,iBAAK5F,MAAL,CAAY4F,OAAZ,CAAoB,0BAApB,EAAgD,EAAhD;AACD;;;iBACD,6BAAoBC,KAApB,EAA2B;AACzB,iBAAK7F,MAAL,CAAY6C,KAAZ,CAAkBgD,KAAK,GAAG,+BAA1B,EAA2D,EAA3D;AACD;;;;;;;yBAnNYhG,gB,EAAgB,2H,EAAA,oI,EAAA,yH,EAAA,yI,EAAA,uH;AAAA,O;;;cAAhBA,gB;AAAgB,oC;AAAA;AAAA;sEAChB,0E,EAAoB,C;;sEAwDpB,0E,EAAoB,C;;;;;;;;;;oFA3DpB,CAAC,wDAAD,C;AAAe,iB;AAAA,e;AAAA,yiG;AAAA;AAAA;ACzB5B;;AAEI;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAQ;;AAAc;;AAAS;;AACrC;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAA0B;;AAAsC;;AAAM;;AAAI;;AAC1E;;AACE;AAAA,qBAAS,IAAAiG,eAAA,QAAT;AAAgC,aAAhC;;AADF;;AAEF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AASF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AAuBE;;AACI;;AAGF;;AAEA;;AACE;;AAGF;;AAGA;;AACE;;AAGF;;AAGA;;AACE;;AAGF;;AAEA;;AACE;;AAGF;;AAEA;;AACE;;AAGF;;AAGA;;AACE;;AAGF;;AAIF;;AACE;;AAGF;;AAiBA;;AACE;;AAUF;;AACF;;AAED;;AA8ED;;AAwFF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AApRqD;;AAAA,4FAAkB,kBAAlB,EAAkB,oBAAlB,EAAkB,cAAlB,EAAkB,EAAlB,EAAkB,cAAlB,EAAkB,EAAlB,EAAkB,OAAlB,EAAkB,EAAlB,EAAkB,YAAlB,EAAkB,uBAAlB,EAAkB,aAAlB,EAAkB,eAAlB;;AA2Ff;;AAAA;;;;;;;;2HD9GzBjG,gB,EAAgB;gBAN5B,uDAM4B;iBANlB;AACTkG,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,0BAFJ;AAGTC,qBAAS,EAAE,CAAC,0BAAD,CAHF;AAITC,qBAAS,EAAE,CAAC,wDAAD;AAJF,W;AAMkB,U;;;;;;;;;;;;;AACuBb,eAAK,EAAE,CAAF;kBAAtD,uDAAsD;mBAA5C,0E,EAAoB;AAAE,wBAAQ;AAAV,a;AAAwB,WAAE,C;AAwDPc,gBAAM,EAAE,CAAF;kBAAvD,uDAAuD;mBAA7C,0E,EAAoB;AAAE,wBAAQ;AAAV,a;AAAyB,WAAE;;;;;;;;;;;;;;;;;;;AEpF5D;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAuBaC,a;;;;;cAAAA;;;;2BAAAA,a;AAAa,S;AAAA,kBAVf,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,4EAJO,EAKP,0EALO,EAMP,qEANO,EAOP,wDAAaC,OAAb,EAPO,EAOgB,mEAPhB,CAUe;;;;4HAAbD,a,EAAa;AAAA,yBAXT,mEAWS;AAXO,oBAE7B,4DAF6B,EAG7B,0DAH6B,EAI7B,kEAJ6B,EAK7B,4EAL6B,EAM7B,0EAN6B,EAO7B,qEAP6B,EAOb,uDAPa,EAQN,mEARM;AAWP,S;AAHiB,O;;;2HAG9BA,a,EAAa;gBAZzB,sDAYyB;iBAZhB;AACRE,wBAAY,EAAE,CAAC,mEAAD,CADN;AAERC,mBAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,4EAJO,EAKP,0EALO,EAMP,qEANO,EAOP,wDAAaF,OAAb,EAPO,EAOgB,mEAPhB;AAFD,W;AAYgB,U;;;;;;;;;;;;;;;;;;ACvB1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,UAAMG,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,oB;;;;;cAAAA;;;;2BAAAA,oB;AAAoB,S;AAAA,kBAHtB,CAAC,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAD,CAGsB,EAFrB,4DAEqB;;;;4HAApBG,oB,EAAoB;AAAA;AAAA,oBAFrB,4DAEqB;AAAA,S;AAFT,O;;;2HAEXA,oB,EAAoB;gBAJhC,sDAIgC;iBAJvB;AACRJ,mBAAO,EAAE,CAAC,6DAAaK,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERK,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAIuB,U","file":"pending-pending-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport {\n  FormGroup,\n  FormBuilder,\n  FormControl,\n  Validators,\n} from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport Swal from 'sweetalert2';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { RequestService } from \"../services/request.service\";\n\nimport { FileUpload } from 'src/app/services/fileupload';\n\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-pending',\n  templateUrl: './pending.component.html',\n  styleUrls: ['./pending.component.sass'],\n  providers: [ToastrService],\n})\nexport class PendingComponent implements OnInit {\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  rows = [];\n  scrollBarHorizontal = window.innerWidth < 1200;\n  selectedRowData: selectRowInterface;\n  newUserImg = 'assets/images/users/user-2.png';\n  data = [];\n  public Customers: any;\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  loadingIndicator = true;\n  isRowSelected = false;\n  selectedOption: string;\n  reorderable = true;\n  editcustmergroup: any;\n  public selected: any[] = [];\n  custmerNamevalue:any;\n  custmerVechicleTypevalue:any;\n  custmerMin_kmvalue:any;\n  custmerMin_pricevalue:any;\n  custmerPrice_kmvalue:any;\n  custmerWaiting_minvalue:any;\n  custmerCapacityvalue:any;\n  custmerWidthvalue:any;\n  custmerHeightvalue:any;\n  custmerLengthvalue:any;\n  columns = [\n    { name: 'Name' },\n    { name: 'VechicleType' },\n    { name: 'Capacity' },\n    { name: 'Width' },\n    { name: 'Height' },\n    { name: 'Length' },\n  ];\n  VechicleTypes = [\n    { id: '1', value: 'open' },\n    { id: '2', value: 'close' },\n    { id: '3', value: 'any' },\n  ];\n  statusType = [\n    { id: '1', value: 'Active' },\n    { id: '2', value: 'Completed' },\n    { id: '3', value: 'Pending' },\n  ];\n  designationType = [\n    { id: '1', value: 'Manager' },\n    { id: '2', value: 'Team Leader' },\n    { id: '3', value: 'Clerk' },\n  ];\n\n\n  selectedFiles: FileList;\n  currentFileUpload: FileUpload;\n  percentage: number;\n  url:any;\n  private basePath = '/uploads';\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n  error: string;\n  IdValue: any;\n  custmermin_waiting_timevalue: any;\n  custmernamevalue: any;\n  custmerphonevalue: any;\n  custmeremailvalue: any;\n  custmerpasswordvalue: any;\n  custmerdesignationvalue: any;\n  custmerpickuplocationvalue: any;\n  custmerVechicaltypevalue: any;\n  custmervehiclenamevalue: any;\n  custmerBookdatenvalue: any;\n  custmerDroplocationvalue: any;\n  custmerAmountnvalue: any;\n  custmerTotalKmnvalue: any;\n  constructor( private fb: FormBuilder,\n    private modalService: NgbModal,\n    private toastr: ToastrService,private request: RequestService,private router: Router) { \n\n      this.editForm = this.fb.group({\n        username: ['', [Validators.required, Validators.pattern('[a-zA-Z]+')]],\n        phone: ['', [Validators.required]],\n        email: [\n          '',\n          [Validators.required, Validators.email, Validators.minLength(5)],\n        ],\n        password: ['', [Validators.required]],\n        Bookdate: ['', [Validators.required]],\n        Amount: ['', [Validators.required]],\n        TotalKm: ['', [Validators.required]]\n      });\n      window.onresize = () => {\n        this.scrollBarHorizontal = window.innerWidth < 1200;\n      };\n\n\n    }\n\n  ngOnInit(): void {\n    this.viewdata();\n    window.onresize = () => {\n      this.scrollBarHorizontal = window.innerWidth < 1200;\n    };\n  }\n  viewdata(){\n    this.fetch((data) => {\n      this.data = data;\n      // this.filteredData = data;\n      this.Customers=data.response;\n      this.filteredData=data.response;\n      setTimeout(() => {\n        this.loadingIndicator = false;\n      }, 500);\n    });\n  }\n   // fetch data\n   fetch(cb) {\n    this.request.getpending().subscribe((response) => {\n     console.log(response);\n      cb(response);\n    }, (error) => {\n      console.log(error);\n    });\n\n  } \n  arrayRemove(array, id) {\n    return array.filter(function (element) {\n      return element.id !== id;\n    });\n  }\n\n // edit record\n editRow(row, rowIndex, content) {\n  this.modalService.open(content, {\n    ariaLabelledBy: 'modal-basic-title',\n    size: 'lg',\n  });\n\nconsole.log(\"test\")\n\nthis.request.fetchpendingagreegationById(row._id).subscribe((response) => {\n  this.editcustmergroup=response;\n  console.log(\"responsssse\", this.editcustmergroup);\n    this.custmerpickuplocationvalue=this.editcustmergroup[0].Pickuploc;\n    this.custmerDroplocationvalue=this.editcustmergroup[0].Droploc;\n    this.custmerVechicaltypevalue=this.editcustmergroup[0].Vechicaltype;\n    this.custmervehiclenamevalue=this.editcustmergroup[0].vechicalDetails[0].Name;\n    this.custmerBookdatenvalue=this.editcustmergroup[0].Bookdate;\n    this.custmerAmountnvalue=this.editcustmergroup[0].Amount;\n    this.custmerTotalKmnvalue=this.editcustmergroup[0].TotalKm;\n    this.IdValue=this.editcustmergroup._id;\n\n  //   this.editForm = this.formBuilder.group({\n  //     CountryName2:[this.CountryValue, Validators.required],\n  //     Countrycode2:[this.CountrycodeValue, Validators.required]\n  // });\n  // console.log(this.editForm.value);\n\n\n\n  this.editForm.setValue({\n    username: this.custmerpickuplocationvalue,\n    phone: this.custmerDroplocationvalue,\n    email: this.custmerVechicaltypevalue,\n    password: this.custmervehiclenamevalue,\n    Bookdate:this.custmerBookdatenvalue,\n    Amount:this.custmerAmountnvalue,\n    TotalKm:this.custmerTotalKmnvalue,\n  });\n  this.selectedRowData = row;\n\n});\n }\n// filter table data\nfilterDatatable(event) {\n  // get the value of the key pressed and make it lowercase\n  const val = event.target.value.toLowerCase();\n  // get the amount of columns in the table\n  const colsAmt = this.columns.length;\n  // get the key names of each column in the dataset\n  const keys = Object.keys( this.filteredData[0]);\n  // console.log(\"keys\",\"\"+keys);\n  // assign filtered matches to the active datatable\n  this.Customers = this.filteredData.filter(function (item) {\n    // iterate through each row's column data\n    for (let i = 0; i < colsAmt; i++) {\n      // check for a match\n      if (\n        item[keys[i]].toString().toLowerCase().indexOf(val) !== -1 ||\n        !val\n      ) {\n         \n    \n        return true;\n      }\n    }\n  });\n  // whenever the filter changes, always go back to the first page\n  this.table.offset = 0;\n}\n// get random id\ngetId(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\naddRecordSuccess() {\n  this.toastr.success('Add Record Successfully', '');\n}\neditRecordSuccess() {\n  this.toastr.success('Edit Record Successfully', '');\n}\ndeleteRecordSuccess(count) {\n  this.toastr.error(count + ' Records Deleted Successfully', '');\n}\n}\nexport interface selectRowInterface {\nimg: String;\nfirstName: String;\nlastName: String;\n}\n","<section class=\"main-content\">\n\n    <div class=\"section-body\" style=\"margin-top: 20px;\">\n      <div class=\"row clearfix\">\n        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n          <div class=\"card\">\n            <div class=\"p-10\">\n              <div class=\"row\">\n                <div class=\"col-lg-6\">\n                  <div class=\"row m-0\">\n                    <div class=\"col-lg-3 p-0\">\n                      <div class=\"ngxTableHeader\">\n                        <div class=\"table-title\">\n                          <h2><strong>Pending Orders</strong></h2>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col-lg-5 p-0\">\n                      <div class=\"ngxTableHeader\">\n                        <div class=\"table-search-area\">\n                          <div>\n                            <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                            <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                              (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col-lg-4 p-0\">\n                      <div class=\"ngxTableHeader\">\n                        <div class=\"header-buttons-left\">\n                          <div class=\"icon-button-demo buttons\">\n                            <!-- <button class=\"btn btn-icon icon-left btn-primary rounded-button\" (click)='addRow(addRecord)'>\n                              <i class=\"material-icons\">add</i>\n                            </button> -->\n                            <!-- <button [hidden]=!isRowSelected class=\"btn btn-icon icon-left btn-danger rounded-button\"\n                              (click)='deleteSelected()'>\n                              <i class=\"material-icons\">delete</i>\n                            </button> -->\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <ngx-datatable #table class=\"material\" [rows]=\"Customers\" [loadingIndicator]=\"loadingIndicator\"\n                columnMode=\"force\" [headerHeight]=\"60\" [footerHeight]=\"80\" rowHeight=\"auto\" [limit]=\"10\"\n                [scrollbarH]=\"scrollBarHorizontal\" [reorderable]=\"reorderable\" >\n  \n                <!-- <ngx-datatable-column [width]=\"70\" [sortable]=\"false\" [draggable]=\"false\" [resizeable]=\"false\"\n                  [canAutoResize]=\"false\" [headerCheckboxable]=\"true\" [checkboxable]=\"true\">\n                </ngx-datatable-column> -->\n  \n                <!-- <ngx-datatable-column [width]=\"200\" name=\"PickUpLocation\">\n                  <ng-template let-row=\"row\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>\n                    <div class=\"name-col-style\">\n                      <div>{{row.Pickuploc}}</div>   \n                    </div>\n                  </ng-template>\n                </ngx-datatable-column>\n          \n                <ngx-datatable-column name=\"DropLocation\">\n                  <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                    {{row.Droploc}}\n                  </ng-template>\n                </ngx-datatable-column> -->\n\n\n                <ngx-datatable-column name=\"Customer Name\">\n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                      {{row.CustomerDetails[0].username}}\n                    </ng-template>\n                  </ngx-datatable-column>\n\n                  <ngx-datatable-column name=\"Customer No\">\n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                      {{row.CustomerDetails[0].phone}}\n                    </ng-template>\n                  </ngx-datatable-column>\n\n\n                  <ngx-datatable-column name=\"GoodsName\">\n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                      {{row.GoodsDetails[0].GoodsName}}\n                    </ng-template>\n                  </ngx-datatable-column>\n\n\n                  <ngx-datatable-column name=\"Vehicletype\">                  \n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                      {{row.vechicalDetails[0].VechicleType}}\n                    </ng-template>\n                  </ngx-datatable-column>\n\n                  <ngx-datatable-column name=\"Vehicle\">                  \n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                      {{row.vechicalDetails[0].Name}}\n                    </ng-template>\n                  </ngx-datatable-column>\n\n                  <ngx-datatable-column name=\"Total Amount\">                  \n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                      {{row.Amount}}\n                    </ng-template>\n                  </ngx-datatable-column>\n\n                  \n                  <ngx-datatable-column name=\"Price/KM\">                  \n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                      {{row.vechicalDetails[0].Price_km}}\n                    </ng-template>\n                  </ngx-datatable-column>\n\n          \n\n                <ngx-datatable-column name=\"TotalKm\">                  \n                  <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                    {{row.TotalKm}}\n                  </ng-template>\n                </ngx-datatable-column>\n                 \n               \n                <!-- <ngx-datatable-column name=\"Date\">                  \n                  <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                    {{row.Bookdate}}\n                  </ng-template>\n                </ngx-datatable-column>\n\n                <ngx-datatable-column name=\"Time\">                  \n                  <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                    {{row.Booktime}}\n                  </ng-template>\n                </ngx-datatable-column> -->\n                  \n    \n               \n                <ngx-datatable-column [width]=\"100\" name=\"Actions\" sortable=\"false\">\n                  <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\" ngx-datatable-cell-template>\n                    <span>\n                      <button class=\"btn btn-tbl-view h-auto\" (click)='editRow(row, rowIndex, editRecord)'>\n                        <i class=\"fas fa-eye\"></i>\n                      </button>\n                      <!-- <button class=\"btn btn-tbl-delete h-auto\" (click)='deleteSingleRow(row)'>\n                        <i class=\"far fa-trash-alt\"></i>\n                      </button> -->\n                    </span>\n                  </ng-template>\n                </ngx-datatable-column>\n              </ngx-datatable>\n             <!-- Add Record Modal Window -->\n             <ng-template #addRecord let-modal>\n              <div class=\"modal-header editRowModal\">\n                <h4 class=\"modal-title\" id=\"modal-basic-title\">\n                  <div class=\"table-modal-header\">\n                    <img [src]='newUserImg' alt=\"avatar\">\n                    <div class=\"modal-about\">\n                      <div class=\"font-weight-bold p-t-10 font-17\">\n                        New Customer</div>\n                    </div>\n                  </div>\n                </h4>\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n                  <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                </button>\n              </div>\n              <div class=\"modal-body\">\n                <form class=\"register-form\" [formGroup]=\"register\" (ngSubmit)=\"onAddRowSave(register)\">\n                  <!-- <div class=\"input-field col s12 d-none\">\n                    <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                  </div>\n                  <div class=\"input-field col s12 d-none\">\n                    <input formControlName=\"img\" class=\"form-control\" type=\"hidden\">\n                  </div> -->\n                  <div class=\"row\">\n                    <div class=\"col-lg-6\">\n                      <label>name <span class=\"text-danger\">*</span></label>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"name\" formControlName=\"username\"\n                        required>\n                      <small class=\"form-text text-danger\"\n                        *ngIf=\"!register.get('username').valid && register.get('username').touched\">username is\n                        required</small>\n                    </div>\n    \n\n                    <div class=\"col-lg-6\">\n                      <label>Phone<span class=\"text-danger\">*</span></label>\n                      <input type=\"number\" class=\"form-control\" placeholder=\"Phone\" formControlName=\"phone\" required>\n                      <small class=\"form-text text-danger\"\n                        *ngIf=\"!register.get('phone').valid && register.get('phone').touched\"> Phone is\n                        required</small>\n                    </div>\n              \n                    <div class=\"col-lg-6\">\n                      <label>Email<span class=\"text-danger\">*</span></label>\n                      <input type=\"email\" class=\"form-control\" placeholder=\"Email\" formControlName=\"email\" required>\n                      <small class=\"form-text text-danger\"\n                        *ngIf=\"!register.get('email').valid && register.get('email').touched\"> Please enter a valid\n                        email address</small>\n                    </div>\n              \n                    <div class=\"col-lg-6\">\n                      <label>Password<span class=\"text-danger\">*</span></label>\n                      <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"password\" required>\n                      <small class=\"form-text text-danger\"\n                        *ngIf=\"!register.get('password').valid && register.get('password').touched\"> Please enter a \n                        password</small>\n                    </div>\n\n             \n                    <!-- <div class=\"col-lg-6\">\n                      <label>Designation <span class=\"text-danger\">*</span></label>\n                      <select class=\"form-control\" formControlName=\"Designation\" required>\n                        <option value=\"\" selected disabled>Please select</option>\n                        <option *ngFor=\"let designation of designations?.response\" [value]=\"designation._id\">\n                          {{designation.designation}}\n                        </option>\n                      </select>\n                    </div> -->\n\n                  </div>\n                  <div class=\"modal-footer\">\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!register.valid\">Submit</button>\n                    <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n                  </div>\n                </form>\n              </div>\n            </ng-template>\n            <!-- Edit Record Modal Window -->\n            <ng-template #editRecord let-modal>\n              <div class=\"modal-header editRowModal\">\n                <h4 class=\"modal-title\" id=\"modal-basic-title\">\n                  <div class=\"table-modal-header\">\n                    <!-- <img [src]='selectedRowData?.img' alt=\"avatar\"> -->\n                    <div class=\"modal-about\">\n                      <!-- <div class=\"font-weight-bold p-t-10 font-17\">\n                        {{selectedRowData?.firstName}}\n                        {{selectedRowData?.lastName}}</div> -->\n                    </div>\n                  </div>\n                </h4>\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                  <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                </button>\n              </div>\n              <div class=\"modal-body\">\n                <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                 \n                  <div class=\"row\">\n                    <div class=\"col-lg-6\">\n                      <label>PickUpLocation <span class=\"text-danger\">*</span></label>\n                      <textarea  input type=\"text\"  multilinerows=\"5\"  class=\"form-control\" placeholder=\"name\" formControlName=\"username\"\n                         disabled></textarea>\n                      <small class=\"form-text text-danger\"\n                        *ngIf=\"!editForm.get('username').valid && editForm.get('username').touched\">username is\n                        required</small>\n                    </div>\n    \n\n                    <div class=\"col-lg-6\">\n                      <label>DropLocation<span class=\"text-danger\">*</span></label>\n                      <textarea input type=\"text\"  multilinerows=\"5\"  class=\"form-control\" placeholder=\"Phone\" formControlName=\"phone\" disabled>\n                        </textarea>\n                      <small class=\"form-text text-danger\"\n                        *ngIf=\"!editForm.get('phone').valid && editForm.get('phone').touched\"> Phone is\n                        required</small>\n                    </div>\n              \n                    <div class=\"col-lg-6\">\n                      <label>Vehicletype<span class=\"text-danger\">*</span></label>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Vehicle\" formControlName=\"email\" disabled>\n                      <small class=\"form-text text-danger\"\n                        *ngIf=\"!editForm.get('email').valid && editForm.get('email').touched\"> Please enter a valid\n                        email address</small>\n                    </div>\n              \n                    <div class=\"col-lg-6\">\n                      <label>VehicleName<span class=\"text-danger\">*</span></label>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Vehicle\" formControlName=\"password\" disabled>\n                      <small class=\"form-text text-danger\"\n                        *ngIf=\"!editForm.get('password').valid && editForm.get('password').touched\"> Please enter a \n                        password</small>\n                    </div>\n\n                    <div class=\"col-lg-6\">\n                      <label>Bookdate<span class=\"text-danger\">*</span></label>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Bookdate\" formControlName=\"Bookdate\" disabled>\n                      <small class=\"form-text text-danger\"\n                        *ngIf=\"!editForm.get('Bookdate').valid && editForm.get('Bookdate').touched\"> Please enter a \n                        password</small>\n                    </div>\n\n                    <div class=\"col-lg-6\">\n                      <label>Amount<span class=\"text-danger\">*</span></label>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Amount\" formControlName=\"Amount\" disabled>\n                      <small class=\"form-text text-danger\"\n                        *ngIf=\"!editForm.get('Amount').valid && editForm.get('Amount').touched\"> Please enter a \n                        Amount</small>\n                    </div>\n\n\n                    <div class=\"col-lg-6\">\n                      <label>TotalKm<span class=\"text-danger\">*</span></label>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"TotalKm\" formControlName=\"TotalKm\" disabled>\n                      <small class=\"form-text text-danger\"\n                        *ngIf=\"!editForm.get('TotalKm').valid && editForm.get('TotalKm').touched\"> Please enter a \n                        TotalKm</small>\n                    </div>\n\n                  </div>\n                  <div class=\"modal-footer\">\n                    <!-- <button type=\"submit\" class=\"btn btn-primary\">Save</button> -->\n                    <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close()\">Close</button>\n                  </div>\n                </form>\n              </div>\n            </ng-template>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PendingRoutingModule } from './pending-routing.module';\nimport { PendingComponent } from './pending.component';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { ArchwizardModule } from 'angular-archwizard';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ToastrModule } from 'ngx-toastr';\n@NgModule({\n  declarations: [PendingComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PendingRoutingModule,\n    NgxDatatableModule,\n    HttpClientModule,\n    ToastrModule.forRoot(),ArchwizardModule\n  ]\n})\nexport class PendingModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PendingComponent } from './pending.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PendingComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PendingRoutingModule {}\n"]}