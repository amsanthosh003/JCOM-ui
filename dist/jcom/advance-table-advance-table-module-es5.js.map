{"version":3,"sources":["webpack:///src/app/advance-table/advance-table-routing.module.ts","webpack:///src/app/advance-table/advance-table.component.ts","webpack:///src/app/advance-table/advance-table.component.html","webpack:///src/app/advance-table/advance-table.module.ts"],"names":["routes","path","component","AdvanceTableRoutingModule","forChild","imports","exports","AdvanceTableComponent","fb","modalService","toastr","rows","scrollBarHorizontal","window","innerWidth","newUserImg","data","filteredData","loadingIndicator","isRowSelected","reorderable","selected","columns","name","genders","id","value","statusType","designationType","editForm","group","img","firstName","lastName","designation","phone","email","status","gender","address","onresize","splice","length","push","fire","title","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","forEach","row","deleteRecord","deleteRecordSuccess","fetch","setTimeout","register","required","pattern","minLength","cb","req","XMLHttpRequest","open","onload","JSON","parse","response","send","content","ariaLabelledBy","size","patchValue","getId","rowIndex","setValue","selectedRowData","arrayRemove","array","filter","element","form","reset","dismissAll","addRecordSuccess","key","editRecordSuccess","event","val","target","toLowerCase","colsAmt","keys","Object","console","log","item","i","toString","indexOf","table","offset","min","max","Math","floor","random","success","count","error","filterDatatable","addRow","deleteSelected","onSelect","selector","templateUrl","styleUrls","providers","table2","AdvanceTableModule","forRoot","declarations"],"mappings":"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","file":"advance-table-advance-table-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdvanceTableComponent } from './advance-table.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdvanceTableComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdvanceTableRoutingModule {}\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport {\n  FormGroup,\n  FormBuilder,\n  FormControl,\n  Validators,\n} from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-advance-table',\n  templateUrl: './advance-table.component.html',\n  styleUrls: ['./advance-table.component.sass'],\n  providers: [ToastrService],\n})\nexport class AdvanceTableComponent implements OnInit {\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  rows = [];\n  scrollBarHorizontal = window.innerWidth < 1200;\n  selectedRowData: selectRowInterface;\n  newUserImg = 'assets/images/users/user-2.png';\n  data = [];\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  loadingIndicator = true;\n  isRowSelected = false;\n  selectedOption: string;\n  reorderable = true;\n  public selected: any[] = [];\n  columns = [\n    { name: 'First Name' },\n    { name: 'Last Name' },\n    { name: 'Designation' },\n    { name: 'Gender' },\n    { name: 'Phone' },\n    { name: 'Email' },\n    { name: 'Status' },\n    { name: 'Address' },\n  ];\n  genders = [\n    { id: '1', value: 'male' },\n    { id: '2', value: 'female' },\n  ];\n  statusType = [\n    { id: '1', value: 'Active' },\n    { id: '2', value: 'Completed' },\n    { id: '3', value: 'Pending' },\n  ];\n  designationType = [\n    { id: '1', value: 'Manager' },\n    { id: '2', value: 'Team Leader' },\n    { id: '3', value: 'Clerk' },\n  ];\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n    private toastr: ToastrService\n  ) {\n    this.editForm = this.fb.group({\n      id: new FormControl(),\n      img: new FormControl(),\n      firstName: new FormControl(),\n      lastName: new FormControl(),\n      designation: new FormControl(),\n      phone: new FormControl(),\n      email: new FormControl(),\n      status: new FormControl(),\n      gender: new FormControl(),\n      address: new FormControl(),\n    });\n    window.onresize = () => {\n      this.scrollBarHorizontal = window.innerWidth < 1200;\n    };\n  }\n  // select record using check box\n  onSelect({ selected }) {\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n\n    if (this.selected.length === 0) {\n      this.isRowSelected = false;\n    } else {\n      this.isRowSelected = true;\n    }\n  }\n  deleteSelected() {\n    Swal.fire({\n      title: 'Are you sure?',\n      showCancelButton: true,\n      confirmButtonColor: '#8963ff',\n      cancelButtonColor: '#fb7823',\n      confirmButtonText: 'Yes',\n    }).then((result) => {\n      if (result.value) {\n        this.selected.forEach((row) => {\n          this.deleteRecord(row);\n        });\n        this.deleteRecordSuccess(this.selected.length);\n        this.selected = [];\n        this.isRowSelected = false;\n      }\n    });\n  }\n  ngOnInit() {\n    this.fetch((data) => {\n      this.data = data;\n      this.filteredData = data;\n      setTimeout(() => {\n        this.loadingIndicator = false;\n      }, 500);\n    });\n    this.register = this.fb.group({\n      id: [''],\n      img: [''],\n      firstName: ['', [Validators.required, Validators.pattern('[a-zA-Z]+')]],\n      lastName: [''],\n      designation: ['', [Validators.required]],\n      phone: ['', [Validators.required]],\n      gender: ['', [Validators.required]],\n      email: [\n        '',\n        [Validators.required, Validators.email, Validators.minLength(5)],\n      ],\n      status: ['', [Validators.required]],\n      address: [''],\n    });\n  }\n  // fetch data\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', 'assets/data/adv-tbl-data.json');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n    req.send();\n  }\n  // add new record\n  addRow(content) {\n    this.modalService.open(content, {\n      ariaLabelledBy: 'modal-basic-title',\n      size: 'lg',\n    });\n    this.register.patchValue({\n      id: this.getId(10, 100),\n      img: this.newUserImg,\n    });\n  }\n  // edit record\n  editRow(row, rowIndex, content) {\n    this.modalService.open(content, {\n      ariaLabelledBy: 'modal-basic-title',\n      size: 'lg',\n    });\n    this.editForm.setValue({\n      id: row.id,\n      img: row.img,\n      firstName: row.firstName,\n      lastName: row.lastName,\n      designation: row.designation,\n      phone: row.phone,\n      email: row.email,\n      gender: row.gender,\n      status: row.status,\n      address: row.address,\n    });\n    this.selectedRowData = row;\n  }\n  // delete single row\n  deleteSingleRow(row) {\n    Swal.fire({\n      title: 'Are you sure?',\n      showCancelButton: true,\n      confirmButtonColor: '#8963ff',\n      cancelButtonColor: '#fb7823',\n      confirmButtonText: 'Yes',\n    }).then((result) => {\n      if (result.value) {\n        this.deleteRecord(row);\n        this.deleteRecordSuccess(1);\n      }\n    });\n  }\n\n  deleteRecord(row) {\n    this.data = this.arrayRemove(this.data, row.id);\n  }\n  arrayRemove(array, id) {\n    return array.filter(function (element) {\n      return element.id !== id;\n    });\n  }\n  // save add new record\n  onAddRowSave(form: FormGroup) {\n    this.data.push(form.value);\n    this.data = [...this.data];\n    form.reset();\n    this.modalService.dismissAll();\n    this.addRecordSuccess();\n  }\n  // save record on edit\n  onEditSave(form: FormGroup) {\n    this.data = this.data.filter((value, key) => {\n      if (value.id == form.value.id) {\n        value.firstName = form.value.firstName;\n        value.lastName = form.value.lastName;\n        value.designation = form.value.designation;\n        value.phone = form.value.phone;\n        value.gender = form.value.gender;\n        value.email = form.value.email;\n        value.status = form.value.status;\n        value.address = form.value.address;\n      }\n      this.modalService.dismissAll();\n      return true;\n    });\n    this.editRecordSuccess();\n  }\n  // filter table data\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.filteredData[0]);\n    \n    console.log(\"this.filteredData[0]\",\"\"+keys)\n    // assign filtered matches to the active datatable\n    this.data = this.filteredData.filter(function (item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]].toString().toLowerCase().indexOf(val) !== -1 ||\n          !val\n        ) {\n          console.log(\"keys\",\"\"+item[keys[i]].toString().toLowerCase());\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  // get random id\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  addRecordSuccess() {\n    this.toastr.success('Add Record Successfully', '');\n  }\n  editRecordSuccess() {\n    this.toastr.success('Edit Record Successfully', '');\n  }\n  deleteRecordSuccess(count) {\n    this.toastr.error(count + ' Records Deleted Successfully', '');\n  }\n}\nexport interface selectRowInterface {\n  img: String;\n  firstName: String;\n  lastName: String;\n}\n","<section class=\"main-content\">\n  <ul class=\"breadcrumb breadcrumb-style \">\n    <li class=\"breadcrumb-item\">\n      <h5 class=\"page-title m-b-0\">Table</h5>\n    </li>\n    <li class=\"breadcrumb-item bcrumb-1\">\n      <a routerLink=\"/dashboard/main\">\n        <i class=\"fas fa-home font-17\"></i></a>\n    </li>\n    <li class=\"breadcrumb-item\">Table</li>\n  </ul>\n  <div class=\"section-body\">\n    <div class=\"row clearfix\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"p-10\">\n            <div class=\"row\">\n              <div class=\"col-lg-6\">\n                <div class=\"row m-0\">\n                  <div class=\"col-lg-3 p-0\">\n                    <div class=\"ngxTableHeader\">\n                      <div class=\"table-title\">\n                        <h2><strong>Advance Table</strong></h2>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-lg-5 p-0\">\n                    <div class=\"ngxTableHeader\">\n                      <div class=\"table-search-area\">\n                        <div>\n                          <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                          <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                            (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-lg-4 p-0\">\n                    <div class=\"ngxTableHeader\">\n                      <div class=\"header-buttons-left\">\n                        <div class=\"icon-button-demo buttons\">\n                          <button class=\"btn btn-icon icon-left btn-primary rounded-button\" (click)='addRow(addRecord)'>\n                            <i class=\"material-icons\">add</i>\n                          </button>\n                          <button [hidden]=!isRowSelected class=\"btn btn-icon icon-left btn-danger rounded-button\"\n                            (click)='deleteSelected()'>\n                            <i class=\"material-icons\">delete</i>\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ngx-datatable #table class=\"material\" [rows]=\"data\" [loadingIndicator]=\"loadingIndicator\"\n              columnMode=\"force\" [headerHeight]=\"60\" [footerHeight]=\"80\" rowHeight=\"auto\" [limit]=\"10\"\n              [scrollbarH]=\"scrollBarHorizontal\" [reorderable]=\"reorderable\" [selected]=\"selected\"\n              [selectionType]=\"'checkbox'\" (select)='onSelect($event)'>\n\n              <ngx-datatable-column [width]=\"70\" [sortable]=\"false\" [draggable]=\"false\" [resizeable]=\"false\"\n                [canAutoResize]=\"false\" [headerCheckboxable]=\"true\" [checkboxable]=\"true\">\n              </ngx-datatable-column>\n\n              <ngx-datatable-column [width]=\"200\" name=\"Name\">\n                <ng-template let-row=\"row\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>\n                  <img src=\"{{ row.img }}\" class=\"data-table-img\" />\n                  <div class=\"name-col-style\">\n                    <div>{{row.firstName}} {{row.lastName}}</div>\n                    <div class=\"font-12 text-muted\">{{row.designation}}</div>\n                  </div>\n                </ng-template>\n              </ngx-datatable-column>\n              <ngx-datatable-column name=\"Gender\" [width]=\"100\">\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                  {{row.gender}}\n                </ng-template>\n              </ngx-datatable-column>\n              <ngx-datatable-column name=\"Phone\">\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                  {{row.phone}}\n                </ng-template>\n              </ngx-datatable-column>\n              <ngx-datatable-column name=\"Email\">\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                  {{row.email}}\n                </ng-template>\n              </ngx-datatable-column>\n              <ngx-datatable-column name=\"Status\">\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                  <div *ngIf=\"row.status=='Active'\" class=\"badge-outline col-green\">{{row.status}}\n                  </div>\n                  <div *ngIf=\"row.status=='Completed'\" class=\"badge-outline col-red\">{{row.status}}\n                  </div>\n                  <div *ngIf=\"row.status=='Pending'\" class=\"badge-outline col-indigo\">{{row.status}}\n                  </div>\n                </ng-template>\n              </ngx-datatable-column>\n              <ngx-datatable-column name=\"Address\">\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                  {{row.address}}\n                </ng-template>\n              </ngx-datatable-column>\n              <ngx-datatable-column [width]=\"100\" name=\"Actions\" sortable=\"false\">\n                <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\" ngx-datatable-cell-template>\n                  <span>\n                    <button class=\"btn btn-tbl-edit h-auto\" (click)='editRow(row, rowIndex, editRecord)'>\n                      <i class=\"fas fa-pen\"></i>\n                    </button>\n                    <button class=\"btn btn-tbl-delete h-auto\" (click)='deleteSingleRow(row)'>\n                      <i class=\"far fa-trash-alt\"></i>\n                    </button>\n                  </span>\n                </ng-template>\n              </ngx-datatable-column>\n            </ngx-datatable>\n            <!-- Add Record Modal Window -->\n            <ng-template #addRecord let-modal>\n              <div class=\"modal-header editRowModal\">\n                <h4 class=\"modal-title\" id=\"modal-basic-title\">\n                  <div class=\"table-modal-header\">\n                    <img [src]='newUserImg' alt=\"avatar\">\n                    <div class=\"modal-about\">\n                      <div class=\"font-weight-bold p-t-10 font-17\">\n                        New User</div>\n                    </div>\n                  </div>\n                </h4>\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n                  <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                </button>\n              </div>\n              <div class=\"modal-body\">\n                <form class=\"register-form\" [formGroup]=\"register\" (ngSubmit)=\"onAddRowSave(register)\">\n                  <div class=\"input-field col s12 d-none\">\n                    <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                  </div>\n                  <div class=\"input-field col s12 d-none\">\n                    <input formControlName=\"img\" class=\"form-control\" type=\"hidden\">\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                      <label>First name <span class=\"text-danger\">*</span></label>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"First name\" formControlName=\"firstName\"\n                        required>\n                      <small class=\"form-text text-danger\"\n                        *ngIf=\"!register.get('firstName').valid && register.get('firstName').touched\"> First name is\n                        required</small>\n                    </div>\n                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                      <label>Last name <span class=\"text-danger\"></span></label>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Last name\" formControlName=\"lastName\">\n                      <small class=\"form-text text-danger\"\n                        *ngIf=\"!register.get('lastName').valid && register.get('lastName').touched\"> Last name is\n                        required</small>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                      <label>Phone<span class=\"text-danger\">*</span></label>\n                      <input type=\"number\" class=\"form-control\" placeholder=\"Phone\" formControlName=\"phone\" required>\n                      <small class=\"form-text text-danger\"\n                        *ngIf=\"!register.get('phone').valid && register.get('phone').touched\"> Phone is\n                        required</small>\n                    </div>\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                      <label>Gender <span class=\"text-danger\">*</span></label>\n                      <select class=\"form-control\" formControlName=\"gender\" required>\n                        <option value=\"\" selected disabled>Please select</option>\n                        <option *ngFor=\"let gender of genders\" [value]=\"gender.value\">\n                          {{gender.value}}\n                        </option>\n                      </select>\n                    </div>\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                      <label>Designation <span class=\"text-danger\">*</span></label>\n                      <select class=\"form-control\" formControlName=\"designation\" required>\n                        <option value=\"\" selected disabled>Please select</option>\n                        <option *ngFor=\"let desig of designationType\" [value]=\"desig.value\">\n                          {{desig.value}}\n                        </option>\n                      </select>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                      <label>Email<span class=\"text-danger\">*</span></label>\n                      <input type=\"email\" class=\"form-control\" placeholder=\"Email\" formControlName=\"email\" required>\n                      <small class=\"form-text text-danger\"\n                        *ngIf=\"!register.get('email').valid && register.get('email').touched\"> Please enter a valid\n                        email address</small>\n                    </div>\n                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                      <label>Status <span class=\"text-danger\">*</span></label>\n                      <select class=\"form-control\" formControlName=\"status\" required>\n                        <option value=\"\" selected disabled>Please select</option>\n                        <option *ngFor=\"let status of statusType\" [value]=\"status.value\">\n                          {{status.value}}\n                        </option>\n                      </select>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                      <label>Address<span class=\"text-danger\"></span></label>\n                      <textarea type=\"textarea\" class=\"form-control\" placeholder=\"Address\"\n                        formControlName=\"address\"></textarea>\n                    </div>\n                  </div>\n                  <div class=\"modal-footer\">\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!register.valid\">Submit</button>\n                    <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n                  </div>\n                </form>\n              </div>\n            </ng-template>\n            <!-- Edit Record Modal Window -->\n            <ng-template #editRecord let-modal>\n              <div class=\"modal-header editRowModal\">\n                <h4 class=\"modal-title\" id=\"modal-basic-title\">\n                  <div class=\"table-modal-header\">\n                    <img [src]='selectedRowData?.img' alt=\"avatar\">\n                    <div class=\"modal-about\">\n                      <div class=\"font-weight-bold p-t-10 font-17\">\n                        {{selectedRowData?.firstName}}\n                        {{selectedRowData?.lastName}}</div>\n                    </div>\n                  </div>\n                </h4>\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                  <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                </button>\n              </div>\n              <div class=\"modal-body\">\n                <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                  <div class=\"input-field col s12 d-none\">\n                    <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                      <label>First name <span class=\"text-danger\">*</span></label>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"First name\" formControlName=\"firstName\"\n                        required>\n                      <small class=\"form-text text-danger\"\n                        *ngIf=\"!editForm.get('firstName').valid && editForm.get('firstName').touched\"> First name is\n                        required</small>\n                    </div>\n                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                      <label>Last name <span class=\"text-danger\"></span></label>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Last name\" formControlName=\"lastName\">\n                      <small class=\"form-text text-danger\"\n                        *ngIf=\"!editForm.get('lastName').valid && editForm.get('lastName').touched\"> Last name is\n                        required</small>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                      <label>Phone<span class=\"text-danger\">*</span></label>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Phone\" formControlName=\"phone\" required>\n                      <small class=\"form-text text-danger\"\n                        *ngIf=\"!editForm.get('phone').valid && editForm.get('phone').touched\"> Phone is\n                        required</small>\n                    </div>\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                      <label>Gender <span class=\"text-danger\">*</span></label>\n                      <select class=\"form-control\" formControlName=\"gender\" required>\n                        <option *ngFor=\"let gender of genders\" [value]=\"gender.value\">\n                          {{gender.value}}\n                        </option>\n                      </select>\n                    </div>\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                      <label>Designation <span class=\"text-danger\">*</span></label>\n                      <select class=\"form-control\" formControlName=\"designation\" required>\n                        <option value=\"\" selected disabled>Please select</option>\n                        <option *ngFor=\"let desig of designationType\" [value]=\"desig.value\">\n                          {{desig.value}}\n                        </option>\n                      </select>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                      <label>Email<span class=\"text-danger\">*</span></label>\n                      <input type=\"email\" class=\"form-control\" placeholder=\"Email\" formControlName=\"email\" required>\n                      <small class=\"form-text text-danger\"\n                        *ngIf=\"!editForm.get('email').valid && editForm.get('email').touched\"> Please enter a valid\n                        email address</small>\n                    </div>\n                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                      <label>Status <span class=\"text-danger\">*</span></label>\n                      <select class=\"form-control\" formControlName=\"status\" required>\n                        <option value=\"\" selected disabled>Please select</option>\n                        <option *ngFor=\"let status of statusType\" [value]=\"status.value\">\n                          {{status.value}}\n                        </option>\n                      </select>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                      <label>Address<span class=\"text-danger\"></span></label>\n                      <textarea type=\"textarea\" class=\"form-control\" placeholder=\"Address\"\n                        formControlName=\"address\"></textarea>\n                    </div>\n                  </div>\n                  <div class=\"modal-footer\">\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!editForm.valid\">Save</button>\n                    <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close()\">Close</button>\n                  </div>\n                </form>\n              </div>\n            </ng-template>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AdvanceTableRoutingModule } from './advance-table-routing.module';\nimport { AdvanceTableComponent } from './advance-table.component';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { ToastrModule } from 'ngx-toastr';\n\n@NgModule({\n  declarations: [AdvanceTableComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AdvanceTableRoutingModule,\n    NgxDatatableModule,\n    ToastrModule.forRoot(),\n  ],\n})\nexport class AdvanceTableModule {}\n"]}