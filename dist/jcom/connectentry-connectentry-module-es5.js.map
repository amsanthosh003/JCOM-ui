{"version":3,"sources":["webpack:///src/app/connectentry/connectentry.component.ts","webpack:///src/app/connectentry/connectentry.component.html","webpack:///src/app/connectentry/connectentry.module.ts","webpack:///src/app/connectentry/connectentry-routing.module.ts"],"names":["ConnectentryComponent","fb","modalService","toastr","request","loader","rows","scrollBarHorizontal","window","innerWidth","newUserImg","data","filteredData","loadingIndicator","isRowSelected","reorderable","selected","columns","name","countries","id","meetings","value","connects","connectssts","history","currentUserSubject","JSON","parse","localStorage","getItem","currentUser","asObservable","memberid","Mtable_id","jib_table","memb_id","m_id","tblname","table_name","console","log","onresize","viewdata","gettable","business","register","group","to_member_id","required","connect_type","connect_status","business_category","connect_name","mobile_no","email_id","email","minLength","address","about_connect","comments","fetch","Connects","setTimeout","cb","fetchconnectById","subscribe","response","error","gettables","Tables","tbl_id","table_id","gettablemembers","Members","event","target","isdisable","setname","setmobile","setemail","selectedsts","m_name","m_mobile","m_email_id","reset","fetchbusiness","Business","content","open","ariaLabelledBy","size","pending","patchValue","getId","img","setnull","row","rowIndex","Connectdtls","array","filter","element","form","edata","addconnect","res","status","dismissAll","addRecordSuccess","val","toLowerCase","colsAmt","length","keys","Object","item","i","toString","indexOf","table","offset","min","max","Math","floor","random","success","count","addRow","filterDatatable","selector","templateUrl","styleUrls","providers","table2","icons","Facebook","Twitter","Github","Gitlab","User","Key","UserCheck","Mail","Users","Phone","Globe","Crosshair","Flag","Lock","Award","Briefcase","Smartphone","UserPlus","Airplay","Link2","FileText","ConnectentryModule","pick","forRoot","declarations","imports","routes","path","component","ConnectentryRoutingModule","forChild","exports"],"mappings":"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","file":"connectentry-connectentry-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport {\n  FormGroup,\n  FormBuilder,\n  FormControl,\n  Validators,\n} from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport Swal from 'sweetalert2';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { RequestService } from \"../services/request.service\"; \nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { User } from '../core/models/user';\n@Component({\n  selector: 'app-connectentry',\n  templateUrl: './connectentry.component.html',\n  styleUrls: ['./connectentry.component.sass'],\n  providers: [ToastrService],\n})\nexport class ConnectentryComponent implements OnInit {\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  loader =true;\n  rows = [];\n  scrollBarHorizontal = window.innerWidth < 1200;\n  selectedRowData: selectRowInterface;\n  newUserImg = 'assets/images/users/user-2.png';\n  data = [];\n  public Connects: any;\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  loadingIndicator = true;\n  isRowSelected = false;\n  selectedOption: string;\n  reorderable = true;\n  editcustmergroup: any;\n  public selected: any[] = [];\n  custmernamevalue:any;\n  custmerphonevalue:any;\n  custmeremailvalue:any;\n  custmerpasswordvalue:any;\n  isdisable: boolean;\n  columns = [\n    { name: 'username' },\n    { name: 'phone' },\n    { name: 'email' },\n    { name: 'password' }\n  ];\n \n  countries = [\n    { id: '1', name: 'India' },\n   \n  ];\n  meetings = [\n   \n    { id: '1', value: 'Live' },\n    { id: '2', value: 'Virtual' },\n    { id: '3', value: 'Virtual International' },\n    { id: '4', value: 'Association' },\n  ];\n  connects = [\n   \n    { id: '1', value: 'JCOM' },\n    { id: '2', value: 'JCI' },\n    { id: '3', value: 'Non-JCI' },\n   \n  ];\n  connectssts = [\n   \n    { id: '1', value: 'Self Connect' },\n    { id: '2', value: 'Within JCI-JCOM' },\n\n  ];\n \n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n  error: string;\n  IdValue: any;\n  designations: any;\n  custmerdesignationvalue: any;\n  currentUserSubject: BehaviorSubject<User>;\n  currentUser: Observable<User>;\n  memberid: any;\n  pendings: Object;\n  Persons: any;\n  Tables: Object;\n  table_id: string;\n  Members: Object;\n  Mtable_id: any;\n  Tablesstr: any;\n  setname: any;\n  setmobile: any;\n  setemail: any;\n  Business: Object;\n  memb_id: any;\n  Connectdtls: any;\n  pending: boolean;\n  history: boolean=true;\n  tblname: any;\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n    private toastr: ToastrService,private request: RequestService\n  ) {\n\n    this.currentUserSubject = new BehaviorSubject<User>(\n      JSON.parse(localStorage.getItem('currentUser'))\n    );\n    this.currentUser = this.currentUserSubject.asObservable();\n    this.memberid = this.currentUserSubject.value[0]\n    this.Mtable_id=this.memberid.jib_table;\n    this.memb_id=this.memberid.m_id;\n    this.tblname=this.memberid.table_name;\n    console.log(this.memberid);\n    console.log(this.tblname);\n    window.onresize = () => {\n      this.scrollBarHorizontal = window.innerWidth < 1200;\n    };\n  }\n\n  ngOnInit() {\n    this.viewdata();  \n    this.gettable();\n    this.business();\n    \n   \n    this.register = this.fb.group({\n      m_id:this.memb_id,\n      to_member_id: ['', [Validators.required]],\n      connect_type: ['', [Validators.required]],\n      connect_status: [''],\n      business_category: ['', [Validators.required]],\n      connect_name: ['',[Validators.required]],\n      mobile_no: ['', [Validators.required]],\n      email_id: [\n        '', [Validators.required, Validators.email, Validators.minLength(5)]\n     ],\n      address: [''],\n      about_connect: ['',[Validators.required]],\n      comments: [''],\n\n    });\n  }\n \n  \nviewdata(){\n  this.fetch((data) => {\n    this.data = data;\n    // this.filteredData = data;\n    this.Connects=data;\n    // console.log(\" data\",this.Connects[0].connect_status); \n    this.filteredData=data;\n    setTimeout(() => {\n      this.loadingIndicator = false;\n    }, 500);\n  });\n}\n\n  // fetch data\n  fetch(cb) {\n    this.request.fetchconnectById(this.memberid.m_id).subscribe((response) => {\n    //  console.log(\"fetch data\",response);    \n              cb(response);\n              this.loader=false;\n    }, (error) => {\n      console.log(error);\n    });\n\n  }\n\n  gettable(){\n    this.request.gettables().subscribe((response) => {\n      this.Tables=response;\n      // console.log(this.Tables);\n        }, (error) => {\n          console.log(error);\n        });   \n  }\n  // gettablebyId(id){\n  //   this.request.fetchtableById(this.Mtable_id).subscribe((response) => {\n  //     this.Tablesstr=response;\n  //     console.log(this.Tablesstr);\n  //       }, (error) => {\n  //         console.log(error);\n  //       });   \n  // }\n\n\n  ontableChange(tbl_id:string) {\n    console.log(\"hiii\",tbl_id);\n    this.table_id =tbl_id;    \n    this.request.gettablemembers(this.memberid.m_id,this.table_id).subscribe((response) => {\n      console.log(\"member_id\",this.memberid.m_id);\n      \n           this.Members=response;\n           console.log(\"res\",this.Members); \n    },\n     (error) => {\n      console.log(error);\n    });\n  }\n  // gettablemembers(){\n    \n  //   this.request.gettablemembers(this.memberid.m_id,t_id).subscribe((response) => {\n  //     this.Tables=response;\n  //     console.log(this.Tables);\n  //       }, (error) => {\n  //         console.log(error);\n  //       });   \n  // }\n\n  selectInput1(event) {\n    console.log(\"yes\");\n    let selected = event.target.value;\n    if (selected == \"1\") {\n      this.isdisable = true ;\n    } else {\n      this.isdisable =  false;\n      this.setname = \"\";\n    this.setmobile = \"\";\n    this.setemail = \"\";\n\n    }\n  }\n\n\n//self \nselectInput2(event) {\n  let selectedsts = event.target.value;\n  if (selectedsts == \"0\") {\n    this.setname = this.memberid.m_name ;\n    this.setmobile =this.memberid.m_mobile;\n    this.setemail =this.memberid.m_email_id;\n    console.log(\"setname\",this.setname)\n  } else {\n    this.setname = \"\";\n    this.setmobile = \"\";\n    this.setemail = \"\";\n  }\n}\nsetnull(){\n  this.setname = \"\";\n    this.setmobile = \"\";\n    this.setemail = \"\";\n   this.register.reset();\n}\n\n// business fetch\nbusiness() {\n  this.request.fetchbusiness().subscribe((response) => {\nthis.Business=response;\n// console.log(this.designations);\n  }, (error) => {\n    console.log(error);\n  });\n\n}\n\n  openprofile(content) {\n    this.modalService.open(content, {\n      ariaLabelledBy: 'modal-basic-title',\n      size: 'lg',\n    });  \n  }\n \n  pendinghistory() {\n    this.history=false;\n    this.pending=true;\n\n    // this.request.getconnectpending(this.memberid.m_id).subscribe((response) => {\n    //   this.pendings=response;\n    //   console.log(this.pendings);\n    //     }, (error) => {\n    //       console.log(error);\n    //     });\n  }\n  // add new record\n  addRow(content) {\n    this.modalService.open(content, {\n      ariaLabelledBy: 'modal-basic-title',\n      size: 'lg',\n    });\n\n    this.register.patchValue({\n      id: this.getId(10, 100),\n      img: this.newUserImg,\n    });\n\n    this.setnull();\n\n    this.request.gettablemembers(this.memberid.m_id,this.Mtable_id).subscribe((response) => {\n      console.log(\"member_id\",this.memberid.m_id);\n      console.log(\"table_id\",this.Mtable_id);\n           this.Members=response;\n          //  console.log(\"res\",this.Members);             \n    },\n    (error) => {\n      console.log(error);\n    });\n\n   \n  }\n  // open record\n  openRow(row, rowIndex, content) {\n    this.modalService.open(content, {\n      ariaLabelledBy: 'modal-basic-title',\n      size: 'lg',\n    });\n   \n    // console.log(row);\n    this.Connectdtls=row;\n    console.log(this.Connectdtls.connect_name); \n    \n    // this.request.fetchpersonById(row.m_id).subscribe((response) => {\n    //   this.Persons=response[0];\n    //   console.log(response);\n       \n    // });\n  }\n \n  arrayRemove(array, id) {\n    return array.filter(function (element) {\n      return element.id !== id;\n    });\n  }\n  // save add new record\n  onAddRowSave(form: FormGroup) {\n    \n    const edata = {   \n      m_id: this.memberid.m_id,\n      to_member_id:form.value.to_member_id,\n      connect_type:form.value.connect_type,\n      connect_status:form.value.connect_status,\n      business_category:form.value.business_category,\n      connect_name:form.value.connect_name,\n      mobile_no:form.value.mobile_no,\n      email_id: form.value.email_id ,\n      address:form.value.address,\n      about_connect:form.value.about_connect,\n      comments:form.value.comments,\n    }\n    console.log(edata);\n  \n    this.request.addconnect(edata).subscribe((res: any) => {\n      console.log(res);\n      if (res[0].status == 'success') {       \n        form.reset();\n    this.modalService.dismissAll();\n    this.viewdata();\n    this.addRecordSuccess();\n\n      }\n      else if (res[0].status == 'error') {\n        console.log(\"res\",res);\n        form.reset();\n    this.modalService.dismissAll();\n      }\n    }, (error) => {\n      console.log(\"error\",error);\n      form.reset();\n      this.modalService.dismissAll();\n    });\n  }\n\n  // filter table data\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys( this.filteredData[0]);\n    console.log(\"keys\",\"\"+keys);\n    // assign filtered matches to the active datatable\n    this.Connects = this.filteredData.filter(function (item) {\n      // iterate through each row's column data\n      for (let i = 2; i < 3; i++) {\n        // console.log(\"itemkeys\",item[keys[i]].toString().toLowerCase().indexOf(val));\n        // console.log(\"keyindex\",keys[i]);\n        // check for a match\n        if (\n          item[keys[i]].toString().toLowerCase().indexOf(val) !== -1 ||\n          !val\n        ) {              \n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  // get random id\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  addRecordSuccess() {\n    this.toastr.success('Add Record Successfully', '');\n  }\n  editRecordSuccess() {\n    this.toastr.success('Edit Record Successfully', '');\n  }\n  deleteRecordSuccess(count) {\n    this.toastr.error(count + ' Records Deleted Successfully', '');\n  }\n}\nexport interface selectRowInterface {\n  img: String;\n  firstName: String;\n  lastName: String;\n}\n","<section class=\"main-content\">\n\n  <div class=\"section-body\" style=\"margin-top: 20px;\">\n    <div class=\"row clearfix\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"p-10\" style=\"margin-right: 20px; margin-left: 20px;\">\n            <div class=\"row\" style=\"margin-right: 10px; \">\n              <div class=\"col-lg-12\">\n                <div class=\"row m-0\">\n                  <div class=\"col-lg-2 p-0\">\n                    <div class=\"ngxTableHeader\">\n                      <div class=\"table-title\">\n                        <h5><strong>Connect</strong></h5>\n                      </div>\n                    </div>\n                  </div>\n\n\n                  <div class=\"col-lg-2 p-0\">\n                    <div class=\"ngxTableHeader\">\n                      <div class=\"header-buttons-left\">\n                        <div class=\"icon-button-demo buttons\">\n                          <button class=\"btn btn-icon icon-left btn-success\" (click)='addRow(addRecord)'>\n                            <i class=\"fas fa-plus\"></i>AddConnect</button>\n                          <!-- <button class=\"btn btn-icon icon-left btn-primary rounded-button\"\n                          (click)=' addRow(addRecord)'>\n                          <i class=\"material-icons\">add</i>\n                        </button> -->\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"col-lg-3 p-0\">\n                    <div class=\"ngxTableHeader\">\n                      <div class=\"header-buttons-left\">\n                        <div class=\"icon-button-demo buttons\">\n                          <button class=\"btn btn-icon icon-left btn-warning\">\n                            <a routerLink=\"/connectpending\" style=\"text-decoration: none; color: rgb(255, 255, 255);\">\n                              <i class=\"fa fa-info-circle\"></i> PendingHistory\n                            </a> </button>\n                          <!-- <button class=\"btn btn-icon icon-left btn-primary rounded-button\"\n                            (click)=' pendinghistory(pendingRecord)'>\n                            <i class=\"material-icons\">av_timer</i>\n                          </button> -->\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"col-lg-5 p-0\">\n                    <div class=\"ngxTableHeader\" style=\"display: flex;  justify-content: flex-end;\">\n                      <div class=\"table-search-area\">\n                        <div>\n                          <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                          <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                            (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n\n                </div>\n              </div>\n            </div>\n            <!-- main table -->\n            <br>\n            <ngx-datatable #table class=\"material\" [rows]=\"Connects\" [loadingIndicator]=\"loadingIndicator\"\n              columnMode=\"force\" [headerHeight]=\"50\" [footerHeight]=\"50\" rowHeight=\"auto\" [limit]=\"10\"\n              [scrollbarH]=\"scrollBarHorizontal\" [reorderable]=\"reorderable\" *ngIf=\"!loader\">\n\n              <ngx-datatable-column name=\"Date\">\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                  {{row.created_on}}\n                </ng-template>\n              </ngx-datatable-column>\n\n              <ngx-datatable-column [width]=\"200\" name=\"To/From\">\n                <ng-template let-row=\"row\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>\n                  <!-- <img src=\"{{ row.img }}\" class=\"data-table-img\" /> -->\n                  <div class=\"name-col-style\">\n                    <div>{{row.to_name}}</div>\n                    <div class=\"font-12 text-muted\">{{row.name}}</div>\n                  </div>\n                </ng-template>\n              </ngx-datatable-column>\n\n\n              <ngx-datatable-column name=\"Connect Name\">\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                  {{row.connect_name}}\n                </ng-template>\n              </ngx-datatable-column>\n\n              <ngx-datatable-column name=\"Connect Type\">\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                  {{row.connect_type}}\n                </ng-template>\n              </ngx-datatable-column>\n\n              <ngx-datatable-column name=\"Status\">\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                  <div *ngIf=\"row.connect_status=='Within JCOM'\" class=\"badge-outline col-green\">{{row.connect_status}}\n                  </div>\n                  <div *ngIf=\"row.connect_status=='Self'\" class=\"badge-outline col-indigo\">{{row.connect_status}}\n                  </div>\n                </ng-template>\n              </ngx-datatable-column>\n\n              <ngx-datatable-column name=\"About Connect\" >\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                  <h5 *ngIf=\"row.about_connect=='HOT'\"><span class=\"badge badge-danger\">Hot</span></h5>\n                  <h5 *ngIf=\"row.about_connect=='MEDIUM'\"><span class=\"badge badge-warning\">Medium</span></h5>\n                  <h5 *ngIf=\"row.about_connect=='COLD'\"><span class=\"badge badge-info\">Cold</span></h5>\n                </ng-template>\n              </ngx-datatable-column>\n\n              <ngx-datatable-column name=\"Type\">\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                  <!-- <div *ngIf=\"row.type=='1'\"  class=\"badge-outline\" style=\"width: 10px; height: 10px; color:  rgb(245, 11, 11);\" ><i class=\"material-icons\">call_made</i>\n                  </div> -->\n                  <!-- <div *ngIf=\"row.type=='2'\" class=\"badge-outline col-red\"><i class=\"material-icons\">call_received</i>\n                  </div> -->\n\n                  <h6 *ngIf=\"row.type=='1'\" style=\"color: rgb(245, 11, 11);\"><i class=\"material-icons\">call_made</i>\n                  </h6>\n                  <h6 *ngIf=\"row.type=='2'\" style=\"color: rgb(3, 153, 15);\"><i class=\"material-icons\">call_received</i>\n                  </h6>\n                  <!-- <a class=\"btn btn-icon btn-sm btn-danger\" >\n                    <i class=\"material-icons\">call_made</i>\n                  </a> -->\n                  <!-- <div *ngIf=\"row.type=='1'\" ><h5 class=\"msr-2 h-auto tblEditBtn\"><i class=\"fas fa-eye\"></i></h5>\n                  </div> -->\n                  <!-- <div *ngIf=\"row.type=='2'\" ><h5 class=\"msr-2 h-auto tblEditBtn\"><i class=\"fas fa-eye\"></i></h5>\n                  </div> -->\n                  <!-- <button class=\"btn btn-icon btn-sm btn-danger\" *ngIf=\"row.type=='1'\"> <i-feather name=\"arrow-up-right\"></i-feather></button>\n                  <button class=\"btn btn-icon btn-sm btn-success\" *ngIf=\"row.type=='2'\"> <i-feather name=\"arrow-down-left\"></i-feather></i></button> -->\n                </ng-template>\n              </ngx-datatable-column>\n\n\n              <ngx-datatable-column name=\"Actions\" sortable=\"false\">\n                <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\" ngx-datatable-cell-template>\n                  <a class=\"msr-2 h-auto tblEditBtn\" (click)='openRow(row , rowIndex ,profileRecord)'>\n                    <i class=\"fas fa-eye\"></i>\n                  </a>\n                </ng-template>\n              </ngx-datatable-column>\n            </ngx-datatable>\n\n            <!-- skleton -->\n            <div id=\"tit\" style=\"width: 100%;\">\n              <ngx-skeleton-loader count=\"1\"\n                [theme]=\"{  'border-radius': '4px',  height: '60px',  width:'100%', 'opacity':.6, 'background-color': '##b9b8b8',   border: '1px solid white'  }\"\n                *ngIf=\"loader\"></ngx-skeleton-loader>\n            </div>\n            <div class=\"skle\" style=\"width: 100%;\">\n              <ngx-skeleton-loader count=\"10\"\n                [theme]=\"{  'border-radius': '4px',  height: '30px', width:'100%', 'opacity':.6, 'background-color': '##b9b8b8',   border: '1px solid white'  }\"\n                appearance=\"line\" *ngIf=\"loader\"></ngx-skeleton-loader>\n\n            </div>\n\n            <!--   add record Window -->\n            <ng-template #addRecord let-modal>\n              <div class=\"modal-header editRowModal\">\n                <h4 class=\"modal-title\" id=\"modal-basic-title\">\n                  <div class=\"table-modal-header\">\n                    <img src=\"assets/images/JCOM logo 4.jpg\" alt=\"avatar\">\n                    <div class=\"modal-about\">\n                      <div class=\"font-weight-bold p-t-10 font-17\">\n                        Add Connect</div>\n                    </div>\n                  </div>\n                </h4>\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n                  <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                </button>\n              </div>\n\n              <div class=\"modal-body\">\n                <form class=\"register-form\" [formGroup]=\"register\" (ngSubmit)=\"onAddRowSave(register)\"\n                  style=\"margin-top: 50px; border-color: rgb(20, 20, 20); border: black; \">\n                  <div class=\"row\" style=\"margin-left: 30px;margin-right: 40px;  border: black; \">\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group position-relative\">\n                        <label>JCOM Table</label>\n                        <i-feather name=\"Flag\" class=\"login-icons\" style=\"color: rgb(63, 89, 241);\"></i-feather>\n                        <!-- <ng-select  [items]=\"Tables\" bindLabel=\"table_name\" bindValue=\"table\" (change)=\"ontableChange($event.target.value)\" required>\n                        </ng-select> -->\n                        <ng-select (change)=\"ontableChange($event)\" placeholder=\"{{tblname}}\">\n                          <ng-option [value]=\"Mtable_id\" selected>{{tblname}}</ng-option>\n                          <ng-option *ngFor=\"let tab of Tables\" [value]=\"tab.table\">\n                            {{tab.table_name}}\n                          </ng-option>\n                        </ng-select>\n                        <!-- <select class=\"form-control pl-5\"    (change)=\"ontableChange($event.target.value)\">\n                          <option  [value]=\"Mtable_id\" selected >JCOM V NGB TEST TABLE 1.O</option>\n                          <option *ngFor=\"let tab of Tables\" [value]=\"tab.table\">\n                            {{tab.table_name}}\n                          </option>\n                        </select> -->\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group position-relative\">\n                        <label>Connect To<span class=\"text-danger\">*</span></label>\n                        <i-feather name=\"user-plus\" class=\"login-icons\" style=\"color: rgb(63, 89, 241);\"></i-feather>\n                        <ng-select formControlName=\"to_member_id\" [items]=\"Members\" bindLabel=\"name\" bindValue=\"id\"\n                          required placeholder=\"please select\">\n                        </ng-select>\n                        <small class=\"form-text text-danger\"\n                    *ngIf=\"!register.get('to_member_id').valid && register.get('to_member_id').touched\">Please\n                    *Please fill</small>\n                        <!-- <select class=\"form-control pl-5\" formControlName=\"to_member_id\" required>                 \n                          <option value=\"\" selected disabled>Please select</option>\n                          <option *ngFor=\"let mem of Members\" [value]=\"mem.id\">\n                            {{mem.name}}\n                          </option>\n                        </select> -->\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group position-relative\">\n                        <label>Connect Type<span class=\"text-danger\">*</span></label>\n                        <i-feather name=\"airplay\" class=\"login-icons\" style=\"color: rgb(63, 89, 241);\"></i-feather>\n                        <select class=\"form-control pl-5\" formControlName=\"connect_type\" placeholder=\"please select\" (change)=\"selectInput1($event)\"\n                          required>\n                          <!-- <option value=\"\" selected disabled>select</option> -->\n                          <option *ngFor=\"let connect of connects\" [value]=\"connect.id\">\n                            {{connect.value}}\n                          </option>\n                        </select>\n                        <small class=\"form-text text-danger\"\n                        *ngIf=\"!register.get('connect_type').valid && register.get('connect_type').touched\">\n                        *Please fill</small>\n                        <!-- <ng-select  [items]=\"connects\" bindLabel=\"value\" bindValue=\"id\"  formControlName=\"connect_type\" (change)=\"selectInput1($event)\" placeholder=\"please select\" required>\n                        </ng-select> -->\n                      </div>\n                    </div>\n\n                    <!-- <div class=\"col-md-6\">\n                      <div class=\"form-group position-relative\" *ngIf=\"isdisable\">\n                        <label>Connect Status</label>\n                        <i-feather name=\"link2\" class=\"login-icons\" style=\"color: rgb(63, 89, 241);\"></i-feather>\n                        <select class=\"form-control pl-5\">\n                          <option value=\"\" selected disabled>select</option>\n                          <option *ngFor=\"let connect of connectssts\" [value]=\"connect.id\">\n                            {{connect.value}}\n                          </option>\n                        </select>\n                      </div>\n                    </div> -->\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group position-relative\" *ngIf=\"isdisable\">\n                        <label>\n                          Connect Status\n                        </label><span class=\"text-danger\">*</span><br><br>\n                        <div class=\"form-check form-check-inline\" (change)=\"selectInput2($event)\">\n                          <input class=\"form-check-input\" type=\"radio\" formControlName=\"connect_status\"\n                            id=\"inlineRadio1\" value=\"0\">\n                          <label class=\"form-check-label\" for=\"inlineRadio1\">Self Connect</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\" (change)=\"selectInput2($event)\">\n                          <input class=\"form-check-input\" type=\"radio\" formControlName=\"connect_status\"\n                            id=\"inlineRadio2\" value=\"1\">\n                          <label class=\"form-check-label\" for=\"inlineRadio2\">Within JCI-JCOM</label>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group position-relative\">\n                        <label>Business Category <span class=\"text-danger\">*</span></label>\n                        <i-feather name=\"Briefcase\" class=\"login-icons\" style=\"color: rgb(63, 89, 241);\"></i-feather>\n                        <!-- <select class=\"form-control pl-5\" required>\n                          <option value=\"\" selected disabled>select</option>\n                          <option *ngFor=\"let buss of Business\" [value]=\"buss.id\">\n                            {{buss.name}}\n                          </option>\n                        </select> -->\n                        <ng-select [items]=\"Business\" bindLabel=\"category\" bindValue=\"id\"\n                          formControlName=\"business_category\" placeholder=\"please select\" required>\n                        </ng-select>\n                        <small class=\"form-text text-danger\"\n                        *ngIf=\"!register.get('business_category').valid && register.get('business_category').touched\">\n                        *Please fill</small>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group position-relative\">\n                        <label>Connect Name <span class=\"text-danger\">*</span></label>\n                        <i-feather name=\"smartphone\" class=\"login-icons\" style=\"color: rgb(63, 89, 241);\"></i-feather>\n                        <input type=\"text\" class=\"form-control pl-5\" formControlName=\"connect_name\"\n                          placeholder=\"connect name\" [(ngModel)]=\"setname\">\n                          <small class=\"form-text text-danger\"\n                        *ngIf=\"!register.get('connect_name').valid && register.get('connect_name').touched\">\n                        *Please fill</small>\n\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group position-relative\">\n                        <label>Mobile No <span class=\"text-danger\">*</span></label>\n                        <i-feather name=\"phone\" class=\"login-icons\" style=\"color: rgb(63, 89, 241);\"></i-feather>\n                        <input type=\"text\" class=\"form-control pl-5\" formControlName=\"mobile_no\" placeholder=\"Mobile No\"\n                          [(ngModel)]=\"setmobile\">\n                          <small class=\"form-text text-danger\"\n                        *ngIf=\"!register.get('mobile_no').valid && register.get('mobile_no').touched\">\n                        *Please fill</small>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group position-relative\">\n                        <label> E-mail <span class=\"text-danger\">*</span></label>\n                        <i-feather name=\"mail\" class=\"login-icons\" style=\"color: rgb(63, 89, 241);\"></i-feather>\n                        <input type=\"email\" class=\"form-control pl-5\" formControlName=\"email_id\" placeholder=\"Email\"\n                          [(ngModel)]=\"setemail\">\n                          <small class=\"form-text text-danger\"\n                          *ngIf=\"!register.get('email_id').valid && (register.get('email_id').dirty || register.get('email_id').touched)\">\n                          *Please fill</small>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-12\">\n                      <div class=\"form-group position-relative\">\n                        <label>Address</label>\n                        <textarea name=\"\" class=\"form-control pl-2\" formControlName=\"address\" cols=\"30\"\n                          rows=\"3\"></textarea>\n\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-12\">\n                      <div class=\"form-group position-relative\">\n                        <label> Comments </label>\n                        <textarea name=\"\" class=\"form-control pl-2 \" formControlName=\"comments\" cols=\"30\"\n                          rows=\"3 \"></textarea>\n\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-12\" style=\"text-align: center;\">\n                      <label>\n                        <h6>How About the Connect<span class=\"text-danger\">*</span></h6>\n                      </label> &nbsp;&nbsp;\n                      <div class=\"form-check form-check-inline\">\n                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"about_connect\" id=\"hot\" value=\"1\">\n                        <label class=\"form-check-label\" for=\"hot\">Hot</label>\n                      </div>\n                      <div class=\"form-check form-check-inline\">\n                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"about_connect\" id=\"medium\"\n                          value=\"2\">\n                        <label class=\"form-check-label\" for=\"medium\">Medium</label>\n                      </div>\n                      <div class=\"form-check form-check-inline\">\n                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"about_connect\" id=\"cold\"\n                          value=\"3\">\n                        <label class=\"form-check-label\" for=\"cold\">Cold</label>\n                      </div>\n                      <small class=\"form-text text-danger\"\n                      *ngIf=\"!register.get('about_connect').valid && register.get('about_connect').touched\">\n                      *Please fill</small>\n                    </div>\n\n                    <div class=\"col-md-12\" style=\"text-align: center;\"><br>\n                      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!register.valid\">Save</button>\n                      <br><br><br>\n                    </div>\n                    <!-- <button (click)=\"toggleShow()\" type=\"checkbox\" >show/hide</button> -->\n\n                    <!-- row end -->\n                  </div>\n                </form>\n\n              </div>\n            </ng-template>\n            <!-- PENDING History -->\n\n            <!--           \n<div *ngIf=\"pending\">\n                <ngx-datatable #table class=\"material\" [rows]=\"Connects\" [loadingIndicator]=\"loadingIndicator\"\n                  columnMode=\"force\" [headerHeight]=\"50\" [footerHeight]=\"50\" rowHeight=\"auto\" [limit]=\"10\"\n                  [reorderable]=\"reorderable\" *ngIf=\"!loader\" >\n\n                  <ngx-datatable-column name=\"Date\">\n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                      {{row.phone}}\n                    </ng-template>\n                  </ngx-datatable-column>\n\n                  <ngx-datatable-column [width]=\"200\" name=\"Name\">\n                    <ng-template let-row=\"row\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>\n                      \n                      <div class=\"name-col-style\">\n                        <div>{{row.username}}</div>\n                        <div class=\"font-12 text-muted\">{{row.name}}</div>\n                      </div>\n                    </ng-template>\n                  </ngx-datatable-column>\n\n                  <ngx-datatable-column name=\"Connect Type\">\n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                      {{row.email}}\n                    </ng-template>\n                  </ngx-datatable-column>\n                  <ngx-datatable-column name=\"Status\">\n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                      <div *ngIf=\"row.status=='Active'\" class=\"badge-outline col-green\">{{row.status}}\n                      </div>\n                      <div *ngIf=\"row.status=='Completed'\" class=\"badge-outline col-red\">{{row.status}}\n                      </div>\n                      <div *ngIf=\"row.status=='Pending'\" class=\"badge-outline col-indigo\">{{row.status}}\n                      </div>\n                    </ng-template>\n                  </ngx-datatable-column>\n\n                  <ngx-datatable-column name=\"Actions\" sortable=\"false\">\n                    <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\" ngx-datatable-cell-template>\n                      <a class=\"msr-2 h-auto tblEditBtn\" (click)='openprofile(connectRecord)'>\n                        <i class=\"fas fa-eye\"></i>\n                      </a>\n\n                    </ng-template>\n                  </ngx-datatable-column>\n                </ngx-datatable>\n               \n\n              \n                <div id=\"tit\" style=\"width: 100%;\">\n                  <ngx-skeleton-loader count=\"1\"\n                    [theme]=\"{  'border-radius': '4px',  height: '60px',  width:'100%', 'opacity':.6, 'background-color': '##b9b8b8',   border: '1px solid white'  }\"\n                    *ngIf=\"loader\"></ngx-skeleton-loader>\n                </div>\n                <div class=\"skle\" style=\"width: 100%;\">\n                  <ngx-skeleton-loader count=\"10\"\n                    [theme]=\"{  'border-radius': '4px',  height: '30px', width:'100%', 'opacity':.6, 'background-color': '##b9b8b8',   border: '1px solid white'  }\"\n                    appearance=\"line\" *ngIf=\"loader\"></ngx-skeleton-loader>\n                </div>\n              </div>\n  -->\n\n            <!-- profile page -->\n            <ng-template #profileRecord let-modal>\n\n              <div class=\"modal-header editRowModal\">\n                <h4 class=\"modal-title\" id=\"modal-basic-title\">\n                  <div class=\"table-modal-header\">\n                    <img src=\"assets/images/JCOM logo 4.jpg\" alt=\"avatar\">\n                    <div class=\"modal-about\">\n                      <div class=\"font-weight-bold p-t-10 font-17\">\n                        Connect Details</div>\n                    </div>\n                  </div>\n                </h4>\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n                  <span aria-hidden=\"true\"><i class=\"material-icons\">close</i></span>\n                </button>\n              </div>\n\n              <div class=\"modal-body\">\n                <div class=\"section-body\">\n                  <div class=\"row \">\n                    <div class=\"col-12 col-md-12 \">\n                      <div class=\"card author-box\" style=\"margin-left: 35px; margin-right: 35px;\">\n\n                        <div class=\"card-body\">\n                          <div class=\"card-header\">\n                            <h4>Details</h4>\n                          </div>\n                          <div class=\"py-4\" style=\"margin-left: 20px; margin-right: 20px;\">\n                            <p class=\"clearfix\">\n                              <span class=\"float-start\">\n                                Connect Name :\n                              </span>\n                              <span class=\"float-right text-muted\" style=\"width: 60%;\">\n                                {{Connectdtls.connect_name}}\n                              </span>\n                            </p>\n                            <p class=\"clearfix\">\n                              <span class=\"float-start\">\n                                Connect Type :\n                              </span>\n                              <span class=\"float-right text-muted\" style=\"width: 60%;\">\n                                {{Connectdtls.connect_type}}\n                              </span>\n                            </p>\n\n                            <p class=\"clearfix\">\n                              <span class=\"float-start\">\n                                Connect Status :\n                              </span>\n                              <span class=\"float-right text-muted\" style=\"width: 60%;\">\n                                {{Connectdtls.connect_status}}\n                              </span>\n                            </p>\n\n                            <p class=\"clearfix\">\n                              <span class=\"float-start\">\n                                Business Category :\n                              </span>\n\n                              <span class=\"float-right text-muted\" style=\"width: 60%;\">\n                                {{Connectdtls.business_category}}\n                              </span>\n\n                            </p>\n                            <p class=\"clearfix\">\n                              <span class=\"float-start\">\n                                Email :\n                              </span>\n                              <span class=\"float-right text-muted\" style=\"width: 60%;\">\n                                <a href=\"mailto:{{Connectdtls.email_id}}\"> {{Connectdtls.email_id}}</a>\n                              </span>\n\n                            </p>\n\n                            <p class=\"clearfix\">\n                              <span class=\"float-start\">\n                                Mobile :\n                              </span>\n                              <span class=\"float-right text-muted\" style=\"width: 60%;\">\n                                <a href=\"tel:{{Connectdtls.mobile_no}}\">{{Connectdtls.mobile_no}}</a>\n                              </span>\n\n                            </p>\n                            <p class=\"clearfix\">\n                              <span class=\"float-start\">\n                                Comment :\n                              </span>\n\n                              <span class=\"float-end text-muted\" class=\"float-right text-muted\" style=\"width: 60%;\">\n                                {{Connectdtls.comments}}\n                              </span>\n\n                            </p>\n\n                            <p class=\"clearfix\">\n                              <span class=\"float-start\">\n                                Table Name:\n                              </span>\n\n                              <span class=\"float-end text-muted\" class=\"float-right text-muted\" style=\"width: 60%;\">\n                                {{Connectdtls.table_name}}\n\n                              </span>\n                            </p>\n\n                            <p class=\"clearfix\">\n                              <span class=\"float-start\">\n                                Metting Type :\n                              </span>\n                              <span class=\"float-end text-muted\" class=\"float-right text-muted\" style=\"width: 60%;\">\n                                {{Connectdtls.meeting_type}}\n                              </span>\n                            </p>\n                            <p class=\"clearfix\">\n                              <span class=\"float-start\">\n                                How About Connect :\n                              </span>\n                              <span class=\"float-end text-muted\" class=\"float-right text-muted\" style=\"width: 60%;\">\n                                {{Connectdtls.about_connect}}\n                              </span>\n                            </p>\n\n                          </div>\n\n                          <!-- skleton -->\n                          <!-- <div class=\"col-lg-10\" style=\"width: 30%; height: 30px;\">\n                            <ngx-skeleton-loader count=\"1\"\n                              [theme]=\"{  'border-radius': '4px',  height: '30px',  width:'100%', 'opacity':.6, 'background-color': '##b9b8b8',   border: '1px solid white'  }\"\n                              *ngIf='loader'></ngx-skeleton-loader>\n\n                          </div>\n                          <br><br>\n\n                          <div class=\"row\" style=\"  opacity: 1;  height:500px;\" *ngIf='loader'>\n\n                            <div class=\"col-lg-4\">\n                              <ngx-skeleton-loader count=\"10\"\n                                [theme]=\"{  'border-radius': '5px',  height: '5%',  width:'100%', 'opacity':.6, 'background-color': '##b9b8b8',   border: '1px solid white' }\">\n                              </ngx-skeleton-loader>\n\n                            </div>\n                            <div class=\"col-lg-8\">\n                              <ngx-skeleton-loader count=\"10\"\n                                [theme]=\"{  'border-radius': '5px',  height: '5%',  width:'100%', 'opacity':.6,  'background-color': '##b9b8b8',   border: '1px solid white' }\">\n                              </ngx-skeleton-loader>\n\n                            </div>\n                          </div> -->\n                          <!-- skleton end -->\n\n                        </div>\n                      </div>\n                    </div>\n                    <!-- col end -->\n                  </div>\n                </div>\n              </div>\n            </ng-template>\n\n\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n \nimport { ConnectentryRoutingModule } from './connectentry-routing.module';\nimport { ConnectentryComponent } from './connectentry.component';\nimport { FeatherModule } from 'angular-feather';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { ToastrModule } from 'ngx-toastr';\nimport { ArchwizardModule } from 'angular-archwizard';\n\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {\n  Facebook,\n  Twitter,\n  Github,  Gitlab,  User,\n  Key, UserCheck,  Mail,  Users,  Phone,  Globe,  Crosshair,  Flag,  Lock,  Award,  Briefcase,\n  Smartphone,  UserPlus,\n  Airplay,\n  Link2,\n  FileText\n  \n} from 'angular-feather/icons';\nconst icons = {\n  Facebook,\n  Twitter,\n  Github,  Gitlab, User,  Key, UserCheck, Mail,  Users,  Phone,  Globe,\n  Crosshair,  Flag,  Lock,  Award,  Briefcase,  Smartphone,  UserPlus,\n  Airplay,\tLink2\n ,FileText\n  \n};\n\n@NgModule({ \n  declarations: [ConnectentryComponent],\n  imports: [\n    CommonModule,\n    ConnectentryRoutingModule,\n    FeatherModule.pick(icons),\n   \n    ReactiveFormsModule,\n    \n    NgxDatatableModule,\n    HttpClientModule,\n    ToastrModule.forRoot(),ArchwizardModule,\n    NgxSkeletonLoaderModule,\n    NgSelectModule\n  ]\n})\nexport class ConnectentryModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ConnectentryComponent } from './connectentry.component';\n\nconst routes: Routes = [{ path: '', component: ConnectentryComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConnectentryRoutingModule { }\n"]}